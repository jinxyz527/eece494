   1               		.file	"nrk_error.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.global __do_copy_data
   8               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
 134               	.global	_nrk_errno_set
 136               	_nrk_errno_set:
 137               		.stabd	46,0,0
   1:../../../nano-RK/src/kernel/source/nrk_error.c **** /******************************************************************************
   2:../../../nano-RK/src/kernel/source/nrk_error.c **** *  Nano-RK, a real-time operating system for sensor networks.
   3:../../../nano-RK/src/kernel/source/nrk_error.c **** *  Copyright (C) 2007, Real-Time and Multimedia Lab, Carnegie Mellon University
   4:../../../nano-RK/src/kernel/source/nrk_error.c **** *  All rights reserved.
   5:../../../nano-RK/src/kernel/source/nrk_error.c **** *
   6:../../../nano-RK/src/kernel/source/nrk_error.c **** *  This is the Open Source Version of Nano-RK included as part of a Dual
   7:../../../nano-RK/src/kernel/source/nrk_error.c **** *  Licensing Model. If you are unsure which license to use please refer to:
   8:../../../nano-RK/src/kernel/source/nrk_error.c **** *  http://www.nanork.org/nano-RK/wiki/Licensing
   9:../../../nano-RK/src/kernel/source/nrk_error.c **** *
  10:../../../nano-RK/src/kernel/source/nrk_error.c **** *  This program is free software: you can redistribute it and/or modify
  11:../../../nano-RK/src/kernel/source/nrk_error.c **** *  it under the terms of the GNU General Public License as published by
  12:../../../nano-RK/src/kernel/source/nrk_error.c **** *  the Free Software Foundation, version 2.0 of the License.
  13:../../../nano-RK/src/kernel/source/nrk_error.c **** *
  14:../../../nano-RK/src/kernel/source/nrk_error.c **** *  This program is distributed in the hope that it will be useful,
  15:../../../nano-RK/src/kernel/source/nrk_error.c **** *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  16:../../../nano-RK/src/kernel/source/nrk_error.c **** *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  17:../../../nano-RK/src/kernel/source/nrk_error.c **** *  GNU General Public License for more details.
  18:../../../nano-RK/src/kernel/source/nrk_error.c **** *
  19:../../../nano-RK/src/kernel/source/nrk_error.c **** *  You should have received a copy of the GNU General Public License
  20:../../../nano-RK/src/kernel/source/nrk_error.c **** *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  21:../../../nano-RK/src/kernel/source/nrk_error.c **** *
  22:../../../nano-RK/src/kernel/source/nrk_error.c **** *  Contributing Authors (specific to this file):
  23:../../../nano-RK/src/kernel/source/nrk_error.c **** *  Anthony Rowe
  24:../../../nano-RK/src/kernel/source/nrk_error.c **** *  Zane Starr
  25:../../../nano-RK/src/kernel/source/nrk_error.c **** *  Anand Eswaren
  26:../../../nano-RK/src/kernel/source/nrk_error.c **** *******************************************************************************/
  27:../../../nano-RK/src/kernel/source/nrk_error.c ****  
  28:../../../nano-RK/src/kernel/source/nrk_error.c **** #include <nrk_error.h>
  29:../../../nano-RK/src/kernel/source/nrk_error.c **** #include <stdio.h>
  30:../../../nano-RK/src/kernel/source/nrk_error.c **** #include <nrk.h>
  31:../../../nano-RK/src/kernel/source/nrk_error.c **** #include <nrk_task.h>
  32:../../../nano-RK/src/kernel/source/nrk_error.c **** #include <nrk_cfg.h>
  33:../../../nano-RK/src/kernel/source/nrk_error.c **** #include <nrk_timer.h>
  34:../../../nano-RK/src/kernel/source/nrk_error.c **** #ifdef NRK_LOG_ERRORS
  35:../../../nano-RK/src/kernel/source/nrk_error.c **** #include <nrk_eeprom.h>
  36:../../../nano-RK/src/kernel/source/nrk_error.c **** static uint8_t error_cnt;
  37:../../../nano-RK/src/kernel/source/nrk_error.c **** #endif
  38:../../../nano-RK/src/kernel/source/nrk_error.c **** 
  39:../../../nano-RK/src/kernel/source/nrk_error.c **** void pause();
  40:../../../nano-RK/src/kernel/source/nrk_error.c **** void blink_morse_code_error( uint8_t number );
  41:../../../nano-RK/src/kernel/source/nrk_error.c **** 
  42:../../../nano-RK/src/kernel/source/nrk_error.c **** 
  43:../../../nano-RK/src/kernel/source/nrk_error.c **** void _nrk_errno_set (NRK_ERRNO error_code) 
  44:../../../nano-RK/src/kernel/source/nrk_error.c **** {
 139               	.LM0:
 140               	.LFBB1:
 141               	/* prologue: function */
 142               	/* frame size = 0 */
  45:../../../nano-RK/src/kernel/source/nrk_error.c ****   nrk_cur_task_TCB->errno = error_code;
 144               	.LM1:
 145 0000 E091 0000 		lds r30,nrk_cur_task_TCB
 146 0004 F091 0000 		lds r31,(nrk_cur_task_TCB)+1
 147 0008 8487      		std Z+12,r24
 148               	/* epilogue start */
  46:../../../nano-RK/src/kernel/source/nrk_error.c **** } 
 150               	.LM2:
 151 000a 0895      		ret
 153               	.Lscope1:
 155               		.stabd	78,0,0
 157               	.global	nrk_errno_get
 159               	nrk_errno_get:
 160               		.stabd	46,0,0
  47:../../../nano-RK/src/kernel/source/nrk_error.c **** 
  48:../../../nano-RK/src/kernel/source/nrk_error.c **** uint8_t nrk_errno_get () 
  49:../../../nano-RK/src/kernel/source/nrk_error.c **** {
 162               	.LM3:
 163               	.LFBB2:
 164               	/* prologue: function */
 165               	/* frame size = 0 */
 167               	.LM4:
 168 000c E091 0000 		lds r30,nrk_cur_task_TCB
 169 0010 F091 0000 		lds r31,(nrk_cur_task_TCB)+1
  50:../../../nano-RK/src/kernel/source/nrk_error.c ****   return nrk_cur_task_TCB->errno;
  51:../../../nano-RK/src/kernel/source/nrk_error.c **** }
 171               	.LM5:
 172 0014 8485      		ldd r24,Z+12
 173               	/* epilogue start */
 174 0016 0895      		ret
 176               	.Lscope2:
 178               		.stabd	78,0,0
 182               	.global	nrk_error_get
 184               	nrk_error_get:
 185               		.stabd	46,0,0
  52:../../../nano-RK/src/kernel/source/nrk_error.c **** 
  53:../../../nano-RK/src/kernel/source/nrk_error.c **** #ifdef NRK_LOG_ERRORS
  54:../../../nano-RK/src/kernel/source/nrk_error.c **** void _nrk_log_error(uint8_t error_num, uint8_t error_task)
  55:../../../nano-RK/src/kernel/source/nrk_error.c **** {
  56:../../../nano-RK/src/kernel/source/nrk_error.c ****   
  57:../../../nano-RK/src/kernel/source/nrk_error.c ****    // 1) Load error cnt and add 1
  58:../../../nano-RK/src/kernel/source/nrk_error.c ****    error_cnt=nrk_eeprom_read_byte(NRK_ERROR_EEPROM_INDEX);
  59:../../../nano-RK/src/kernel/source/nrk_error.c ****    error_cnt++;
  60:../../../nano-RK/src/kernel/source/nrk_error.c ****    if(error_cnt==255) error_cnt=0;
  61:../../../nano-RK/src/kernel/source/nrk_error.c ****    // 2) write error
  62:../../../nano-RK/src/kernel/source/nrk_error.c ****    nrk_eeprom_write_byte(NRK_ERROR_EEPROM_INDEX+1+((uint16_t)error_cnt*6),error_num);
  63:../../../nano-RK/src/kernel/source/nrk_error.c ****    nrk_eeprom_write_byte(NRK_ERROR_EEPROM_INDEX+1+((uint16_t)error_cnt*6+1),error_task);
  64:../../../nano-RK/src/kernel/source/nrk_error.c ****    nrk_eeprom_write_byte(NRK_ERROR_EEPROM_INDEX+1+((uint16_t)error_cnt*6+2),(nrk_system_time.secs>>
  65:../../../nano-RK/src/kernel/source/nrk_error.c ****    nrk_eeprom_write_byte(NRK_ERROR_EEPROM_INDEX+1+((uint16_t)error_cnt*6+3),(nrk_system_time.secs>>
  66:../../../nano-RK/src/kernel/source/nrk_error.c ****    nrk_eeprom_write_byte(NRK_ERROR_EEPROM_INDEX+1+((uint16_t)error_cnt*6+4),(nrk_system_time.secs>>
  67:../../../nano-RK/src/kernel/source/nrk_error.c ****    nrk_eeprom_write_byte(NRK_ERROR_EEPROM_INDEX+1+((uint16_t)error_cnt*6+5),(nrk_system_time.secs)&
  68:../../../nano-RK/src/kernel/source/nrk_error.c ****    // 3) write error cnt back
  69:../../../nano-RK/src/kernel/source/nrk_error.c ****    nrk_eeprom_write_byte(NRK_ERROR_EEPROM_INDEX,error_cnt);
  70:../../../nano-RK/src/kernel/source/nrk_error.c **** }
  71:../../../nano-RK/src/kernel/source/nrk_error.c **** #endif
  72:../../../nano-RK/src/kernel/source/nrk_error.c **** 
  73:../../../nano-RK/src/kernel/source/nrk_error.c **** void nrk_error_add (uint8_t n) 
  74:../../../nano-RK/src/kernel/source/nrk_error.c **** {
  75:../../../nano-RK/src/kernel/source/nrk_error.c ****   error_num = n;
  76:../../../nano-RK/src/kernel/source/nrk_error.c ****   error_task = nrk_cur_task_TCB->task_ID;
  77:../../../nano-RK/src/kernel/source/nrk_error.c **** 
  78:../../../nano-RK/src/kernel/source/nrk_error.c **** #ifdef NRK_LOG_ERRORS
  79:../../../nano-RK/src/kernel/source/nrk_error.c **** _nrk_log_error(error_num, error_task);
  80:../../../nano-RK/src/kernel/source/nrk_error.c **** #endif
  81:../../../nano-RK/src/kernel/source/nrk_error.c **** 
  82:../../../nano-RK/src/kernel/source/nrk_error.c **** #ifdef NRK_REPORT_ERRORS
  83:../../../nano-RK/src/kernel/source/nrk_error.c ****     nrk_error_print ();
  84:../../../nano-RK/src/kernel/source/nrk_error.c **** #endif  /*  */
  85:../../../nano-RK/src/kernel/source/nrk_error.c **** } 
  86:../../../nano-RK/src/kernel/source/nrk_error.c **** 
  87:../../../nano-RK/src/kernel/source/nrk_error.c **** void nrk_kernel_error_add (uint8_t n, uint8_t task) 
  88:../../../nano-RK/src/kernel/source/nrk_error.c **** {
  89:../../../nano-RK/src/kernel/source/nrk_error.c ****   error_num = n;
  90:../../../nano-RK/src/kernel/source/nrk_error.c ****   error_task = task;
  91:../../../nano-RK/src/kernel/source/nrk_error.c ****   uint8_t i;
  92:../../../nano-RK/src/kernel/source/nrk_error.c ****   uint8_t t;
  93:../../../nano-RK/src/kernel/source/nrk_error.c ****   
  94:../../../nano-RK/src/kernel/source/nrk_error.c **** #ifdef NRK_LOG_ERRORS
  95:../../../nano-RK/src/kernel/source/nrk_error.c **** _nrk_log_error(error_num, error_task);
  96:../../../nano-RK/src/kernel/source/nrk_error.c **** #endif
  97:../../../nano-RK/src/kernel/source/nrk_error.c **** 
  98:../../../nano-RK/src/kernel/source/nrk_error.c **** #ifdef NRK_REPORT_ERRORS
  99:../../../nano-RK/src/kernel/source/nrk_error.c ****     nrk_error_print ();
 100:../../../nano-RK/src/kernel/source/nrk_error.c ****   
 101:../../../nano-RK/src/kernel/source/nrk_error.c **** #endif  /*  */
 102:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 103:../../../nano-RK/src/kernel/source/nrk_error.c **** #ifdef NRK_SOFT_REBOOT_ON_ERROR
 104:../../../nano-RK/src/kernel/source/nrk_error.c **** #ifdef NRK_WATCHDOG
 105:../../../nano-RK/src/kernel/source/nrk_error.c ****          nrk_watchdog_disable();
 106:../../../nano-RK/src/kernel/source/nrk_error.c **** #endif
 107:../../../nano-RK/src/kernel/source/nrk_error.c **** asm volatile("jmp 0x0000\n\t" ::);
 108:../../../nano-RK/src/kernel/source/nrk_error.c **** #endif
 109:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 110:../../../nano-RK/src/kernel/source/nrk_error.c **** #ifdef NRK_REBOOT_ON_ERROR
 111:../../../nano-RK/src/kernel/source/nrk_error.c ****   // wait for watchdog to kick in
 112:../../../nano-RK/src/kernel/source/nrk_error.c ****   if(n!=NRK_WATCHDOG_ERROR && n!=NRK_BOD_ERROR && n!=NRK_EXT_RST_ERROR)
 113:../../../nano-RK/src/kernel/source/nrk_error.c ****   {
 114:../../../nano-RK/src/kernel/source/nrk_error.c ****   nrk_watchdog_enable();
 115:../../../nano-RK/src/kernel/source/nrk_error.c ****   nrk_int_disable(); 
 116:../../../nano-RK/src/kernel/source/nrk_error.c ****   while(1);
 117:../../../nano-RK/src/kernel/source/nrk_error.c ****   }
 118:../../../nano-RK/src/kernel/source/nrk_error.c **** #endif
 119:../../../nano-RK/src/kernel/source/nrk_error.c ****     
 120:../../../nano-RK/src/kernel/source/nrk_error.c **** #ifdef NRK_HALT_ON_ERROR
 121:../../../nano-RK/src/kernel/source/nrk_error.c ****     while (1)
 122:../../../nano-RK/src/kernel/source/nrk_error.c ****      {
 123:../../../nano-RK/src/kernel/source/nrk_error.c ****     for(i=0; i<20; i++ )
 124:../../../nano-RK/src/kernel/source/nrk_error.c ****     {
 125:../../../nano-RK/src/kernel/source/nrk_error.c ****     nrk_led_set (2);
 126:../../../nano-RK/src/kernel/source/nrk_error.c ****     nrk_led_clr (3);
 127:../../../nano-RK/src/kernel/source/nrk_error.c ****     for (t = 0; t < 100; t++)
 128:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_spin_wait_us (1000);
 129:../../../nano-RK/src/kernel/source/nrk_error.c ****     nrk_led_set (3);
 130:../../../nano-RK/src/kernel/source/nrk_error.c ****     nrk_led_clr (2);
 131:../../../nano-RK/src/kernel/source/nrk_error.c ****     for (t = 0; t < 100; t++)
 132:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_spin_wait_us (1000);
 133:../../../nano-RK/src/kernel/source/nrk_error.c ****     }
 134:../../../nano-RK/src/kernel/source/nrk_error.c ****     nrk_led_clr (3);
 135:../../../nano-RK/src/kernel/source/nrk_error.c ****     nrk_led_clr (2);
 136:../../../nano-RK/src/kernel/source/nrk_error.c ****     blink_morse_code_error( task );
 137:../../../nano-RK/src/kernel/source/nrk_error.c ****     blink_morse_code_error( n );
 138:../../../nano-RK/src/kernel/source/nrk_error.c ****     }
 139:../../../nano-RK/src/kernel/source/nrk_error.c ****   
 140:../../../nano-RK/src/kernel/source/nrk_error.c **** #endif  /*  */
 141:../../../nano-RK/src/kernel/source/nrk_error.c ****  
 142:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 143:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 144:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 145:../../../nano-RK/src/kernel/source/nrk_error.c **** } 
 146:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 147:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 148:../../../nano-RK/src/kernel/source/nrk_error.c **** uint8_t nrk_error_get (uint8_t * task_id, uint8_t * code) 
 149:../../../nano-RK/src/kernel/source/nrk_error.c **** {
 187               	.LM6:
 188               	.LFBB3:
 189               	/* prologue: function */
 190               	/* frame size = 0 */
 150:../../../nano-RK/src/kernel/source/nrk_error.c ****   if (error_num == 0)
 192               	.LM7:
 193 0018 2091 0000 		lds r18,error_num
 194 001c 2223      		tst r18
 195 001e 01F4      		brne .L6
 196 0020 80E0      		ldi r24,lo8(0)
 197 0022 0895      		ret
 198               	.L6:
 151:../../../nano-RK/src/kernel/source/nrk_error.c ****     return 0;
 152:../../../nano-RK/src/kernel/source/nrk_error.c ****   *code = error_num;
 200               	.LM8:
 201 0024 FB01      		movw r30,r22
 202 0026 2083      		st Z,r18
 153:../../../nano-RK/src/kernel/source/nrk_error.c ****   *task_id = error_task;
 204               	.LM9:
 205 0028 2091 0000 		lds r18,error_task
 206 002c FC01      		movw r30,r24
 207 002e 2083      		st Z,r18
 208 0030 81E0      		ldi r24,lo8(1)
 154:../../../nano-RK/src/kernel/source/nrk_error.c ****   return 1;
 155:../../../nano-RK/src/kernel/source/nrk_error.c **** }
 210               	.LM10:
 211 0032 0895      		ret
 213               	.Lscope3:
 215               		.stabd	78,0,0
 217               	.global	pause
 219               	pause:
 220               		.stabd	46,0,0
 156:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 157:../../../nano-RK/src/kernel/source/nrk_error.c **** int8_t nrk_error_print () 
 158:../../../nano-RK/src/kernel/source/nrk_error.c **** {
 159:../../../nano-RK/src/kernel/source/nrk_error.c ****   int8_t t,i;
 160:../../../nano-RK/src/kernel/source/nrk_error.c ****   if (error_num == 0)
 161:../../../nano-RK/src/kernel/source/nrk_error.c ****     return 0;
 162:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 163:../../../nano-RK/src/kernel/source/nrk_error.c ****    #ifdef NRK_HALT_ON_ERROR
 164:../../../nano-RK/src/kernel/source/nrk_error.c ****      nrk_int_disable ();
 165:../../../nano-RK/src/kernel/source/nrk_error.c ****        #ifdef NRK_WATCHDOG
 166:../../../nano-RK/src/kernel/source/nrk_error.c ****          nrk_watchdog_disable();
 167:../../../nano-RK/src/kernel/source/nrk_error.c ****        #endif
 168:../../../nano-RK/src/kernel/source/nrk_error.c ****    #endif 
 169:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 170:../../../nano-RK/src/kernel/source/nrk_error.c ****    #ifndef NRK_REBOOT_ON_ERROR
 171:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_int_disable ();
 172:../../../nano-RK/src/kernel/source/nrk_error.c ****    #endif 
 173:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 174:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 175:../../../nano-RK/src/kernel/source/nrk_error.c **** #ifdef NRK_HALT_AND_LOOP_ON_ERROR 
 176:../../../nano-RK/src/kernel/source/nrk_error.c ****     nrk_int_disable ();
 177:../../../nano-RK/src/kernel/source/nrk_error.c ****    #ifdef NRK_WATCHDOG
 178:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_watchdog_disable();
 179:../../../nano-RK/src/kernel/source/nrk_error.c ****    #endif
 180:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 181:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 182:../../../nano-RK/src/kernel/source/nrk_error.c ****   while (1)
 183:../../../nano-RK/src/kernel/source/nrk_error.c ****      {
 184:../../../nano-RK/src/kernel/source/nrk_error.c ****     
 185:../../../nano-RK/src/kernel/source/nrk_error.c **** #endif  
 186:../../../nano-RK/src/kernel/source/nrk_error.c ****     
 187:../../../nano-RK/src/kernel/source/nrk_error.c ****     nrk_kprintf (PSTR ("*NRK ERROR("));
 188:../../../nano-RK/src/kernel/source/nrk_error.c ****     printf ("%d", error_task);
 189:../../../nano-RK/src/kernel/source/nrk_error.c ****     nrk_kprintf (PSTR ("): "));
 190:../../../nano-RK/src/kernel/source/nrk_error.c ****     if (error_num > NRK_NUM_ERRORS)
 191:../../../nano-RK/src/kernel/source/nrk_error.c ****       error_num = NRK_UNKOWN;
 192:../../../nano-RK/src/kernel/source/nrk_error.c ****     switch (error_num)
 193:../../../nano-RK/src/kernel/source/nrk_error.c ****        {
 194:../../../nano-RK/src/kernel/source/nrk_error.c ****     case NRK_STACK_TOO_SMALL:
 195:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_kprintf (PSTR ("Stack was not defined as large enough!"));
 196:../../../nano-RK/src/kernel/source/nrk_error.c ****       break;
 197:../../../nano-RK/src/kernel/source/nrk_error.c ****     case NRK_STACK_OVERFLOW:
 198:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_kprintf (PSTR ("Task Stack Overflow"));
 199:../../../nano-RK/src/kernel/source/nrk_error.c ****       break;
 200:../../../nano-RK/src/kernel/source/nrk_error.c ****     case NRK_INVALID_STACK_POINTER:
 201:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_kprintf (PSTR ("Invalid Stack Pointer"));
 202:../../../nano-RK/src/kernel/source/nrk_error.c ****       break;
 203:../../../nano-RK/src/kernel/source/nrk_error.c ****     case NRK_RESERVE_ERROR:
 204:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_kprintf (PSTR ("Reserve Error in Scheduler"));
 205:../../../nano-RK/src/kernel/source/nrk_error.c ****       break;
 206:../../../nano-RK/src/kernel/source/nrk_error.c ****     case NRK_RESERVE_VIOLATED:
 207:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_kprintf (PSTR ("Task Reserve Violated"));
 208:../../../nano-RK/src/kernel/source/nrk_error.c ****       break;
 209:../../../nano-RK/src/kernel/source/nrk_error.c ****     case NRK_WAKEUP_MISSED:
 210:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_kprintf (PSTR ("Scheduler Missed Wakeup"));
 211:../../../nano-RK/src/kernel/source/nrk_error.c ****       break;
 212:../../../nano-RK/src/kernel/source/nrk_error.c ****     case NRK_DUP_TASK_ID:
 213:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_kprintf (PSTR ("Duplicated Task ID"));
 214:../../../nano-RK/src/kernel/source/nrk_error.c ****       break;
 215:../../../nano-RK/src/kernel/source/nrk_error.c ****     case NRK_BAD_STARTUP:
 216:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_kprintf (PSTR ("Unexpected Restart"));
 217:../../../nano-RK/src/kernel/source/nrk_error.c ****       break;
 218:../../../nano-RK/src/kernel/source/nrk_error.c ****     case NRK_STACK_SMASH:
 219:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_kprintf (PSTR ("Idle or Kernel Stack Overflow"));
 220:../../../nano-RK/src/kernel/source/nrk_error.c ****       break;
 221:../../../nano-RK/src/kernel/source/nrk_error.c ****     case NRK_EXTRA_TASK:
 222:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_kprintf (PSTR ("Extra Task started, is nrk_cfg.h ok?"));
 223:../../../nano-RK/src/kernel/source/nrk_error.c ****       break;
 224:../../../nano-RK/src/kernel/source/nrk_error.c ****     case NRK_LOW_VOLTAGE:
 225:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_kprintf (PSTR ("Low Voltage"));
 226:../../../nano-RK/src/kernel/source/nrk_error.c ****       break;
 227:../../../nano-RK/src/kernel/source/nrk_error.c ****     case NRK_SEG_FAULT:
 228:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_kprintf (PSTR ("Unhandled Interrupt Vector"));
 229:../../../nano-RK/src/kernel/source/nrk_error.c ****       break;
 230:../../../nano-RK/src/kernel/source/nrk_error.c ****     case NRK_TIMER_OVERFLOW:
 231:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_kprintf (PSTR ("Timer Overflow"));
 232:../../../nano-RK/src/kernel/source/nrk_error.c ****       break;
 233:../../../nano-RK/src/kernel/source/nrk_error.c ****     case NRK_SW_WATCHDOG_ERROR:
 234:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_kprintf (PSTR ("SW Watchdog Restart"));
 235:../../../nano-RK/src/kernel/source/nrk_error.c ****       break;
 236:../../../nano-RK/src/kernel/source/nrk_error.c ****     case NRK_WATCHDOG_ERROR:
 237:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_kprintf (PSTR ("Watchdog Restart"));
 238:../../../nano-RK/src/kernel/source/nrk_error.c ****       break;
 239:../../../nano-RK/src/kernel/source/nrk_error.c ****     case NRK_DEVICE_DRIVER:
 240:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_kprintf (PSTR ("Device Driver Error"));
 241:../../../nano-RK/src/kernel/source/nrk_error.c ****       break;
 242:../../../nano-RK/src/kernel/source/nrk_error.c ****     case NRK_UNIMPLEMENTED:
 243:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_kprintf (PSTR ("Kernel function not implemented"));
 244:../../../nano-RK/src/kernel/source/nrk_error.c ****       break;
 245:../../../nano-RK/src/kernel/source/nrk_error.c ****     case NRK_SIGNAL_CREATE_ERROR:
 246:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_kprintf (PSTR ("Failed to create Signal"));
 247:../../../nano-RK/src/kernel/source/nrk_error.c ****       break;
 248:../../../nano-RK/src/kernel/source/nrk_error.c ****     case NRK_SEMAPHORE_CREATE_ERROR:
 249:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_kprintf (PSTR ("Failed to create Semaphore"));
 250:../../../nano-RK/src/kernel/source/nrk_error.c ****       break;
 251:../../../nano-RK/src/kernel/source/nrk_error.c ****     case NRK_BOD_ERROR:
 252:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_kprintf (PSTR ("Brown Out Detect"));
 253:../../../nano-RK/src/kernel/source/nrk_error.c ****       break;
 254:../../../nano-RK/src/kernel/source/nrk_error.c ****     case NRK_EXT_RST_ERROR:
 255:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_kprintf (PSTR ("External Reset"));
 256:../../../nano-RK/src/kernel/source/nrk_error.c ****       break;
 257:../../../nano-RK/src/kernel/source/nrk_error.c ****     default:
 258:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_kprintf (PSTR ("UNKOWN"));
 259:../../../nano-RK/src/kernel/source/nrk_error.c ****       }
 260:../../../nano-RK/src/kernel/source/nrk_error.c ****     putchar ('\r');
 261:../../../nano-RK/src/kernel/source/nrk_error.c ****     putchar ('\n');
 262:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 263:../../../nano-RK/src/kernel/source/nrk_error.c **** #ifdef NRK_SOFT_REBOOT_ON_ERROR
 264:../../../nano-RK/src/kernel/source/nrk_error.c **** #ifdef NRK_WATCHDOG
 265:../../../nano-RK/src/kernel/source/nrk_error.c ****          nrk_watchdog_disable();
 266:../../../nano-RK/src/kernel/source/nrk_error.c **** #endif
 267:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 268:../../../nano-RK/src/kernel/source/nrk_error.c **** GTCCR=0;
 269:../../../nano-RK/src/kernel/source/nrk_error.c **** ASSR=0;
 270:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 271:../../../nano-RK/src/kernel/source/nrk_error.c **** OCR0B=0;
 272:../../../nano-RK/src/kernel/source/nrk_error.c **** OCR0A=0;
 273:../../../nano-RK/src/kernel/source/nrk_error.c **** TCNT0=0;
 274:../../../nano-RK/src/kernel/source/nrk_error.c **** TCCR0B=0;
 275:../../../nano-RK/src/kernel/source/nrk_error.c **** TCCR0A=0;
 276:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 277:../../../nano-RK/src/kernel/source/nrk_error.c **** EIMSK=0;
 278:../../../nano-RK/src/kernel/source/nrk_error.c **** EIFR=0;
 279:../../../nano-RK/src/kernel/source/nrk_error.c **** PCIFR=0;
 280:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 281:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 282:../../../nano-RK/src/kernel/source/nrk_error.c **** OCR3B =0;
 283:../../../nano-RK/src/kernel/source/nrk_error.c **** OCR3A =0;
 284:../../../nano-RK/src/kernel/source/nrk_error.c **** TCNT3 =0;
 285:../../../nano-RK/src/kernel/source/nrk_error.c **** TCCR3B=0;
 286:../../../nano-RK/src/kernel/source/nrk_error.c **** TCCR3A=0;
 287:../../../nano-RK/src/kernel/source/nrk_error.c **** TIFR3=0;
 288:../../../nano-RK/src/kernel/source/nrk_error.c **** TIMSK3=0;
 289:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 290:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 291:../../../nano-RK/src/kernel/source/nrk_error.c **** OCR2B =0;
 292:../../../nano-RK/src/kernel/source/nrk_error.c **** OCR2A =0;
 293:../../../nano-RK/src/kernel/source/nrk_error.c **** TCNT2 =0;
 294:../../../nano-RK/src/kernel/source/nrk_error.c **** TCCR2B=0;
 295:../../../nano-RK/src/kernel/source/nrk_error.c **** TCCR2A=0;
 296:../../../nano-RK/src/kernel/source/nrk_error.c **** TCCR2A=0;
 297:../../../nano-RK/src/kernel/source/nrk_error.c **** TIFR2=0;
 298:../../../nano-RK/src/kernel/source/nrk_error.c **** TIMSK2=0;
 299:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 300:../../../nano-RK/src/kernel/source/nrk_error.c **** //nrk_int_disable(); 
 301:../../../nano-RK/src/kernel/source/nrk_error.c **** asm volatile(	"ldi r28,0xFF\n\t" 
 302:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"out __SP_L__, r28\n\t" 
 303:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"ldi r29,0x21\n\t" 
 304:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"out __SP_H__, r29\n\t" 
 305:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r0\n\t" 
 306:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r1\n\t" 
 307:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r2\n\t" 
 308:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r3\n\t" 
 309:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r4\n\t" 
 310:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r5\n\t" 
 311:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r6\n\t" 
 312:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r7\n\t" 
 313:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r8\n\t" 
 314:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r9\n\t" 
 315:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r10\n\t" 
 316:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r11\n\t" 
 317:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r12\n\t" 
 318:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r13\n\t" 
 319:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r14\n\t" 
 320:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r15\n\t" 
 321:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r16\n\t" 
 322:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r17\n\t" 
 323:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r18\n\t" 
 324:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r19\n\t" 
 325:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r20\n\t" 
 326:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r21\n\t" 
 327:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r22\n\t" 
 328:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r23\n\t" 
 329:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r24\n\t" 
 330:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r25\n\t" 
 331:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r26\n\t" 
 332:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r27\n\t" 
 333:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r28\n\t" 
 334:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r29\n\t" 
 335:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r30\n\t" 
 336:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"clr r31\n\t" 
 337:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"cli\n\t" 
 338:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"out __SREG__, r0\n\t" 
 339:../../../nano-RK/src/kernel/source/nrk_error.c **** 		"jmp __ctors_end\n\t" 
 340:../../../nano-RK/src/kernel/source/nrk_error.c **** 		::);
 341:../../../nano-RK/src/kernel/source/nrk_error.c **** #endif
 342:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 343:../../../nano-RK/src/kernel/source/nrk_error.c **** #ifdef NRK_REBOOT_ON_ERROR
 344:../../../nano-RK/src/kernel/source/nrk_error.c ****   // wait for watchdog to kick in
 345:../../../nano-RK/src/kernel/source/nrk_error.c ****   if(error_num!=NRK_WATCHDOG_ERROR && error_num!=NRK_BOD_ERROR && error_num!=NRK_EXT_RST_ERROR)
 346:../../../nano-RK/src/kernel/source/nrk_error.c ****   {
 347:../../../nano-RK/src/kernel/source/nrk_error.c ****   nrk_watchdog_enable();
 348:../../../nano-RK/src/kernel/source/nrk_error.c ****   nrk_int_disable(); 
 349:../../../nano-RK/src/kernel/source/nrk_error.c ****   while(1);
 350:../../../nano-RK/src/kernel/source/nrk_error.c ****   }
 351:../../../nano-RK/src/kernel/source/nrk_error.c **** #endif
 352:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 353:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 354:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 355:../../../nano-RK/src/kernel/source/nrk_error.c **** //t=error_num;
 356:../../../nano-RK/src/kernel/source/nrk_error.c **** #ifdef NRK_HALT_AND_LOOP_ON_ERROR
 357:../../../nano-RK/src/kernel/source/nrk_error.c ****     for(i=0; i<20; i++ )
 358:../../../nano-RK/src/kernel/source/nrk_error.c ****     {
 359:../../../nano-RK/src/kernel/source/nrk_error.c ****     nrk_led_set (2);
 360:../../../nano-RK/src/kernel/source/nrk_error.c ****     nrk_led_clr (3);
 361:../../../nano-RK/src/kernel/source/nrk_error.c ****     for (t = 0; t < 100; t++)
 362:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_spin_wait_us (1000);
 363:../../../nano-RK/src/kernel/source/nrk_error.c ****     nrk_led_set (3);
 364:../../../nano-RK/src/kernel/source/nrk_error.c ****     nrk_led_clr (2);
 365:../../../nano-RK/src/kernel/source/nrk_error.c ****     for (t = 0; t < 100; t++)
 366:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_spin_wait_us (1000);
 367:../../../nano-RK/src/kernel/source/nrk_error.c ****     }
 368:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 369:../../../nano-RK/src/kernel/source/nrk_error.c ****    nrk_led_clr(2);
 370:../../../nano-RK/src/kernel/source/nrk_error.c ****    nrk_led_clr(3);
 371:../../../nano-RK/src/kernel/source/nrk_error.c ****    blink_morse_code_error( error_task );
 372:../../../nano-RK/src/kernel/source/nrk_error.c ****    blink_morse_code_error( error_num);
 373:../../../nano-RK/src/kernel/source/nrk_error.c **** }
 374:../../../nano-RK/src/kernel/source/nrk_error.c ****   
 375:../../../nano-RK/src/kernel/source/nrk_error.c **** #endif  /*  */
 376:../../../nano-RK/src/kernel/source/nrk_error.c ****     
 377:../../../nano-RK/src/kernel/source/nrk_error.c **** #ifdef NRK_HALT_ON_ERROR
 378:../../../nano-RK/src/kernel/source/nrk_error.c ****     while (1)
 379:../../../nano-RK/src/kernel/source/nrk_error.c ****      {
 380:../../../nano-RK/src/kernel/source/nrk_error.c ****     for(i=0; i<20; i++ )
 381:../../../nano-RK/src/kernel/source/nrk_error.c ****     {
 382:../../../nano-RK/src/kernel/source/nrk_error.c ****     nrk_led_set (2);
 383:../../../nano-RK/src/kernel/source/nrk_error.c ****     nrk_led_clr (3);
 384:../../../nano-RK/src/kernel/source/nrk_error.c ****     for (t = 0; t < 100; t++)
 385:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_spin_wait_us (1000);
 386:../../../nano-RK/src/kernel/source/nrk_error.c ****     nrk_led_set (3);
 387:../../../nano-RK/src/kernel/source/nrk_error.c ****     nrk_led_clr (2);
 388:../../../nano-RK/src/kernel/source/nrk_error.c ****     for (t = 0; t < 100; t++)
 389:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_spin_wait_us (1000);
 390:../../../nano-RK/src/kernel/source/nrk_error.c ****     }
 391:../../../nano-RK/src/kernel/source/nrk_error.c ****     nrk_led_clr (3);
 392:../../../nano-RK/src/kernel/source/nrk_error.c ****     nrk_led_clr (2);
 393:../../../nano-RK/src/kernel/source/nrk_error.c ****     blink_morse_code_error( error_task );
 394:../../../nano-RK/src/kernel/source/nrk_error.c ****     blink_morse_code_error( error_num);
 395:../../../nano-RK/src/kernel/source/nrk_error.c ****     }
 396:../../../nano-RK/src/kernel/source/nrk_error.c ****   
 397:../../../nano-RK/src/kernel/source/nrk_error.c **** #endif  /*  */
 398:../../../nano-RK/src/kernel/source/nrk_error.c ****     error_num = 0;
 399:../../../nano-RK/src/kernel/source/nrk_error.c ****   return t;
 400:../../../nano-RK/src/kernel/source/nrk_error.c **** }
 401:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 402:../../../nano-RK/src/kernel/source/nrk_error.c **** void blink_dash()
 403:../../../nano-RK/src/kernel/source/nrk_error.c **** {
 404:../../../nano-RK/src/kernel/source/nrk_error.c **** uint8_t i;
 405:../../../nano-RK/src/kernel/source/nrk_error.c ****    nrk_led_set (1); 
 406:../../../nano-RK/src/kernel/source/nrk_error.c ****    pause(); 
 407:../../../nano-RK/src/kernel/source/nrk_error.c ****    pause(); 
 408:../../../nano-RK/src/kernel/source/nrk_error.c ****    pause(); 
 409:../../../nano-RK/src/kernel/source/nrk_error.c ****    nrk_led_clr(1);
 410:../../../nano-RK/src/kernel/source/nrk_error.c ****    pause(); 
 411:../../../nano-RK/src/kernel/source/nrk_error.c **** }
 412:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 413:../../../nano-RK/src/kernel/source/nrk_error.c **** void blink_dot()
 414:../../../nano-RK/src/kernel/source/nrk_error.c **** {
 415:../../../nano-RK/src/kernel/source/nrk_error.c ****    nrk_led_set(1); 
 416:../../../nano-RK/src/kernel/source/nrk_error.c ****    pause(); 
 417:../../../nano-RK/src/kernel/source/nrk_error.c ****    nrk_led_clr(1);
 418:../../../nano-RK/src/kernel/source/nrk_error.c ****    pause(); 
 419:../../../nano-RK/src/kernel/source/nrk_error.c **** }
 420:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 421:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 422:../../../nano-RK/src/kernel/source/nrk_error.c **** void blink_morse_code_error( uint8_t number )
 423:../../../nano-RK/src/kernel/source/nrk_error.c **** {
 424:../../../nano-RK/src/kernel/source/nrk_error.c **** uint8_t i;
 425:../../../nano-RK/src/kernel/source/nrk_error.c **** char str[3];
 426:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 427:../../../nano-RK/src/kernel/source/nrk_error.c **** sprintf( str,"%d",number );
 428:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 429:../../../nano-RK/src/kernel/source/nrk_error.c **** for(i=0; i<strlen(str); i++ )
 430:../../../nano-RK/src/kernel/source/nrk_error.c **** {
 431:../../../nano-RK/src/kernel/source/nrk_error.c **** switch( str[i])
 432:../../../nano-RK/src/kernel/source/nrk_error.c **** {
 433:../../../nano-RK/src/kernel/source/nrk_error.c **** case '0': blink_dash(); blink_dash(); blink_dash(); blink_dash(); blink_dash(); break;
 434:../../../nano-RK/src/kernel/source/nrk_error.c **** case '1': blink_dot(); blink_dash(); blink_dash(); blink_dash(); blink_dash(); break;
 435:../../../nano-RK/src/kernel/source/nrk_error.c **** case '2': blink_dot(); blink_dot(); blink_dash(); blink_dash(); blink_dash(); break;
 436:../../../nano-RK/src/kernel/source/nrk_error.c **** case '3': blink_dot(); blink_dot(); blink_dot(); blink_dash(); blink_dash(); break;
 437:../../../nano-RK/src/kernel/source/nrk_error.c **** case '4': blink_dot(); blink_dot(); blink_dot(); blink_dot(); blink_dash(); break;
 438:../../../nano-RK/src/kernel/source/nrk_error.c **** case '5': blink_dot(); blink_dot(); blink_dot(); blink_dot(); blink_dot(); break;
 439:../../../nano-RK/src/kernel/source/nrk_error.c **** case '6': blink_dash(); blink_dot(); blink_dot(); blink_dot(); blink_dot(); break;
 440:../../../nano-RK/src/kernel/source/nrk_error.c **** case '7': blink_dash(); blink_dash(); blink_dot(); blink_dot(); blink_dot(); break;
 441:../../../nano-RK/src/kernel/source/nrk_error.c **** case '8': blink_dash(); blink_dash(); blink_dash(); blink_dot(); blink_dot(); break;
 442:../../../nano-RK/src/kernel/source/nrk_error.c **** case '9': blink_dash(); blink_dash(); blink_dash(); blink_dash(); blink_dot(); break;
 443:../../../nano-RK/src/kernel/source/nrk_error.c **** }
 444:../../../nano-RK/src/kernel/source/nrk_error.c **** pause();
 445:../../../nano-RK/src/kernel/source/nrk_error.c **** pause();
 446:../../../nano-RK/src/kernel/source/nrk_error.c **** pause();
 447:../../../nano-RK/src/kernel/source/nrk_error.c **** }
 448:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 449:../../../nano-RK/src/kernel/source/nrk_error.c **** }
 450:../../../nano-RK/src/kernel/source/nrk_error.c **** 
 451:../../../nano-RK/src/kernel/source/nrk_error.c **** void pause()
 452:../../../nano-RK/src/kernel/source/nrk_error.c **** {
 222               	.LM11:
 223               	.LFBB4:
 224 0034 DF93      		push r29
 225 0036 CF93      		push r28
 226 0038 0F92      		push __tmp_reg__
 227 003a CDB7      		in r28,__SP_L__
 228 003c DEB7      		in r29,__SP_H__
 229               	/* prologue: function */
 230               	/* frame size = 1 */
 453:../../../nano-RK/src/kernel/source/nrk_error.c **** volatile uint8_t t;
 454:../../../nano-RK/src/kernel/source/nrk_error.c ****     for (t = 0; t < 100; t++)
 232               	.LM12:
 233 003e 1982      		std Y+1,__zero_reg__
 234 0040 00C0      		rjmp .L11
 235               	.L12:
 455:../../../nano-RK/src/kernel/source/nrk_error.c ****       nrk_spin_wait_us (2000);
 237               	.LM13:
 238 0042 80ED      		ldi r24,lo8(2000)
 239 0044 97E0      		ldi r25,hi8(2000)
 240 0046 0E94 0000 		call nrk_spin_wait_us
 242               	.LM14:
 243 004a 8981      		ldd r24,Y+1
 244 004c 8F5F      		subi r24,lo8(-(1))
 245 004e 8983      		std Y+1,r24
 246               	.L11:
 247 0050 8981      		ldd r24,Y+1
 248 0052 8436      		cpi r24,lo8(100)
 249 0054 00F0      		brlo .L12
 250               	/* epilogue start */
 456:../../../nano-RK/src/kernel/source/nrk_error.c **** }
 252               	.LM15:
 253 0056 0F90      		pop __tmp_reg__
 254 0058 CF91      		pop r28
 255 005a DF91      		pop r29
 256 005c 0895      		ret
 261               	.Lscope4:
 263               		.stabd	78,0,0
 265               	.global	blink_dot
 267               	blink_dot:
 268               		.stabd	46,0,0
 270               	.LM16:
 271               	.LFBB5:
 272               	/* prologue: function */
 273               	/* frame size = 0 */
 275               	.LM17:
 276 005e 81E0      		ldi r24,lo8(1)
 277 0060 90E0      		ldi r25,hi8(1)
 278 0062 0E94 0000 		call nrk_led_set
 280               	.LM18:
 281 0066 0E94 0000 		call pause
 283               	.LM19:
 284 006a 81E0      		ldi r24,lo8(1)
 285 006c 90E0      		ldi r25,hi8(1)
 286 006e 0E94 0000 		call nrk_led_clr
 288               	.LM20:
 289 0072 0E94 0000 		call pause
 290               	/* epilogue start */
 292               	.LM21:
 293 0076 0895      		ret
 295               	.Lscope5:
 297               		.stabd	78,0,0
 299               	.global	blink_dash
 301               	blink_dash:
 302               		.stabd	46,0,0
 304               	.LM22:
 305               	.LFBB6:
 306               	/* prologue: function */
 307               	/* frame size = 0 */
 309               	.LM23:
 310 0078 81E0      		ldi r24,lo8(1)
 311 007a 90E0      		ldi r25,hi8(1)
 312 007c 0E94 0000 		call nrk_led_set
 314               	.LM24:
 315 0080 0E94 0000 		call pause
 317               	.LM25:
 318 0084 0E94 0000 		call pause
 320               	.LM26:
 321 0088 0E94 0000 		call pause
 323               	.LM27:
 324 008c 81E0      		ldi r24,lo8(1)
 325 008e 90E0      		ldi r25,hi8(1)
 326 0090 0E94 0000 		call nrk_led_clr
 328               	.LM28:
 329 0094 0E94 0000 		call pause
 330               	/* epilogue start */
 332               	.LM29:
 333 0098 0895      		ret
 335               	.Lscope6:
 337               		.stabd	78,0,0
 338               		.data
 339               	.LC0:
 340 0000 2564 00   		.string	"%d"
 341               		.text
 344               	.global	blink_morse_code_error
 346               	blink_morse_code_error:
 347               		.stabd	46,0,0
 349               	.LM30:
 350               	.LFBB7:
 351 009a FF92      		push r15
 352 009c 0F93      		push r16
 353 009e 1F93      		push r17
 354 00a0 DF93      		push r29
 355 00a2 CF93      		push r28
 356 00a4 00D0      		rcall .
 357 00a6 0F92      		push __tmp_reg__
 358 00a8 CDB7      		in r28,__SP_L__
 359 00aa DEB7      		in r29,__SP_H__
 360               	/* prologue: function */
 361               	/* frame size = 3 */
 363               	.LM31:
 364 00ac 00D0      		rcall .
 365 00ae 00D0      		rcall .
 366 00b0 00D0      		rcall .
 367 00b2 EDB7      		in r30,__SP_L__
 368 00b4 FEB7      		in r31,__SP_H__
 369 00b6 3196      		adiw r30,1
 370 00b8 8E01      		movw r16,r28
 371 00ba 0F5F      		subi r16,lo8(-(1))
 372 00bc 1F4F      		sbci r17,hi8(-(1))
 373 00be ADB7      		in r26,__SP_L__
 374 00c0 BEB7      		in r27,__SP_H__
 375 00c2 1296      		adiw r26,1+1
 376 00c4 1C93      		st X,r17
 377 00c6 0E93      		st -X,r16
 378 00c8 1197      		sbiw r26,1
 379 00ca 20E0      		ldi r18,lo8(.LC0)
 380 00cc 30E0      		ldi r19,hi8(.LC0)
 381 00ce 3383      		std Z+3,r19
 382 00d0 2283      		std Z+2,r18
 383 00d2 8483      		std Z+4,r24
 384 00d4 1582      		std Z+5,__zero_reg__
 385 00d6 0E94 0000 		call sprintf
 386 00da FF24      		clr r15
 388               	.LM32:
 389 00dc EDB7      		in r30,__SP_L__
 390 00de FEB7      		in r31,__SP_H__
 391 00e0 3696      		adiw r30,6
 392 00e2 0FB6      		in __tmp_reg__,__SREG__
 393 00e4 F894      		cli
 394 00e6 FEBF      		out __SP_H__,r31
 395 00e8 0FBE      		out __SREG__,__tmp_reg__
 396 00ea EDBF      		out __SP_L__,r30
 397 00ec 00C0      		rjmp .L19
 398               	.L34:
 400               	.LM33:
 401 00ee 800F      		add r24,r16
 402 00f0 911F      		adc r25,r17
 403 00f2 DC01      		movw r26,r24
 404 00f4 8C91      		ld r24,X
 405 00f6 8433      		cpi r24,lo8(52)
 406 00f8 01F0      		breq .L25
 407 00fa 8533      		cpi r24,lo8(53)
 408 00fc 00F4      		brsh .L31
 409 00fe 8133      		cpi r24,lo8(49)
 410 0100 01F0      		breq .L22
 411 0102 8233      		cpi r24,lo8(50)
 412 0104 00F4      		brsh .L32
 413 0106 8033      		cpi r24,lo8(48)
 414 0108 01F0      		breq .+2
 415 010a 00C0      		rjmp .L20
 416 010c 00C0      		rjmp .L48
 417               	.L32:
 418 010e 8233      		cpi r24,lo8(50)
 419 0110 01F0      		breq .L23
 420 0112 8333      		cpi r24,lo8(51)
 421 0114 01F0      		breq .+2
 422 0116 00C0      		rjmp .L20
 423 0118 00C0      		rjmp .L49
 424               	.L31:
 425 011a 8733      		cpi r24,lo8(55)
 426 011c 01F0      		breq .L28
 427 011e 8833      		cpi r24,lo8(56)
 428 0120 00F4      		brsh .L33
 429 0122 8533      		cpi r24,lo8(53)
 430 0124 01F0      		breq .L26
 431 0126 8633      		cpi r24,lo8(54)
 432 0128 01F0      		breq .+2
 433 012a 00C0      		rjmp .L20
 434 012c 00C0      		rjmp .L50
 435               	.L33:
 436 012e 8833      		cpi r24,lo8(56)
 437 0130 01F0      		breq .L29
 438 0132 8933      		cpi r24,lo8(57)
 439 0134 01F0      		breq .+2
 440 0136 00C0      		rjmp .L20
 441 0138 00C0      		rjmp .L51
 442               	.L48:
 444               	.LM34:
 445 013a 0E94 0000 		call blink_dash
 446 013e 00C0      		rjmp .L36
 447               	.L22:
 449               	.LM35:
 450 0140 0E94 0000 		call blink_dot
 451               	.L36:
 452 0144 0E94 0000 		call blink_dash
 453               	.L38:
 454 0148 0E94 0000 		call blink_dash
 455               	.L39:
 456 014c 0E94 0000 		call blink_dash
 457               	.L40:
 458 0150 0E94 0000 		call blink_dash
 459 0154 00C0      		rjmp .L20
 460               	.L23:
 462               	.LM36:
 463 0156 0E94 0000 		call blink_dot
 464 015a 0E94 0000 		call blink_dot
 465 015e 00C0      		rjmp .L38
 466               	.L49:
 468               	.LM37:
 469 0160 0E94 0000 		call blink_dot
 470 0164 0E94 0000 		call blink_dot
 471 0168 0E94 0000 		call blink_dot
 472 016c 00C0      		rjmp .L39
 473               	.L25:
 475               	.LM38:
 476 016e 0E94 0000 		call blink_dot
 477 0172 0E94 0000 		call blink_dot
 478 0176 0E94 0000 		call blink_dot
 479 017a 0E94 0000 		call blink_dot
 480 017e 00C0      		rjmp .L40
 481               	.L26:
 483               	.LM39:
 484 0180 0E94 0000 		call blink_dot
 485 0184 00C0      		rjmp .L43
 486               	.L50:
 488               	.LM40:
 489 0186 0E94 0000 		call blink_dash
 490               	.L43:
 491 018a 0E94 0000 		call blink_dot
 492 018e 00C0      		rjmp .L42
 493               	.L28:
 495               	.LM41:
 496 0190 0E94 0000 		call blink_dash
 497 0194 0E94 0000 		call blink_dash
 498               	.L42:
 499 0198 0E94 0000 		call blink_dot
 500 019c 00C0      		rjmp .L41
 501               	.L29:
 503               	.LM42:
 504 019e 0E94 0000 		call blink_dash
 505 01a2 0E94 0000 		call blink_dash
 506 01a6 0E94 0000 		call blink_dash
 507               	.L41:
 508 01aa 0E94 0000 		call blink_dot
 509 01ae 00C0      		rjmp .L37
 510               	.L51:
 512               	.LM43:
 513 01b0 0E94 0000 		call blink_dash
 514 01b4 0E94 0000 		call blink_dash
 515 01b8 0E94 0000 		call blink_dash
 516 01bc 0E94 0000 		call blink_dash
 517               	.L37:
 518 01c0 0E94 0000 		call blink_dot
 519               	.L20:
 521               	.LM44:
 522 01c4 0E94 0000 		call pause
 524               	.LM45:
 525 01c8 0E94 0000 		call pause
 527               	.LM46:
 528 01cc 0E94 0000 		call pause
 530               	.LM47:
 531 01d0 F394      		inc r15
 532               	.L19:
 533 01d2 F801      		movw r30,r16
 534 01d4 0190      		ld __tmp_reg__,Z+
 535 01d6 0020      		tst __tmp_reg__
 536 01d8 01F4      		brne .-6
 537 01da 3197      		sbiw r30,1
 538 01dc E01B      		sub r30,r16
 539 01de F10B      		sbc r31,r17
 540 01e0 8F2D      		mov r24,r15
 541 01e2 90E0      		ldi r25,lo8(0)
 542 01e4 8E17      		cp r24,r30
 543 01e6 9F07      		cpc r25,r31
 544 01e8 00F4      		brsh .+2
 545 01ea 00C0      		rjmp .L34
 546               	/* epilogue start */
 548               	.LM48:
 549 01ec 0F90      		pop __tmp_reg__
 550 01ee 0F90      		pop __tmp_reg__
 551 01f0 0F90      		pop __tmp_reg__
 552 01f2 CF91      		pop r28
 553 01f4 DF91      		pop r29
 554 01f6 1F91      		pop r17
 555 01f8 0F91      		pop r16
 556 01fa FF90      		pop r15
 557 01fc 0895      		ret
 563               	.Lscope7:
 565               		.stabd	78,0,0
 567               	.global	nrk_error_print
 569               	nrk_error_print:
 570               		.stabd	46,0,0
 572               	.LM49:
 573               	.LFBB8:
 574 01fe 0F93      		push r16
 575 0200 1F93      		push r17
 576               	/* prologue: function */
 577               	/* frame size = 0 */
 579               	.LM50:
 580 0202 8091 0000 		lds r24,error_num
 581 0206 8823      		tst r24
 582 0208 01F4      		brne .L53
 583               	/* epilogue start */
 585               	.LM51:
 586 020a 1F91      		pop r17
 587 020c 0F91      		pop r16
 588 020e 0895      		ret
 589               	.L53:
 591               	.LM52:
 592 0210 0E94 0000 		call nrk_int_disable
 594               	.LM53:
 595 0214 0E94 0000 		call nrk_int_disable
 597               	.LM54:
 598 0218 80E0      		ldi r24,lo8(__c.2058)
 599 021a 90E0      		ldi r25,hi8(__c.2058)
 600 021c 0E94 0000 		call nrk_kprintf
 602               	.LM55:
 603 0220 00D0      		rcall .
 604 0222 00D0      		rcall .
 605 0224 EDB7      		in r30,__SP_L__
 606 0226 FEB7      		in r31,__SP_H__
 607 0228 3196      		adiw r30,1
 608 022a 80E0      		ldi r24,lo8(.LC0)
 609 022c 90E0      		ldi r25,hi8(.LC0)
 610 022e ADB7      		in r26,__SP_L__
 611 0230 BEB7      		in r27,__SP_H__
 612 0232 1296      		adiw r26,1+1
 613 0234 9C93      		st X,r25
 614 0236 8E93      		st -X,r24
 615 0238 1197      		sbiw r26,1
 616 023a 8091 0000 		lds r24,error_task
 617 023e 8283      		std Z+2,r24
 618 0240 1382      		std Z+3,__zero_reg__
 619 0242 0E94 0000 		call printf
 621               	.LM56:
 622 0246 0F90      		pop __tmp_reg__
 623 0248 0F90      		pop __tmp_reg__
 624 024a 0F90      		pop __tmp_reg__
 625 024c 0F90      		pop __tmp_reg__
 626 024e 80E0      		ldi r24,lo8(__c.2060)
 627 0250 90E0      		ldi r25,hi8(__c.2060)
 628 0252 0E94 0000 		call nrk_kprintf
 630               	.LM57:
 631 0256 8091 0000 		lds r24,error_num
 632 025a 8731      		cpi r24,lo8(23)
 633 025c 00F0      		brlo .L54
 635               	.LM58:
 636 025e 1092 0000 		sts error_num,__zero_reg__
 637               	.L54:
 639               	.LM59:
 640 0262 E091 0000 		lds r30,error_num
 641 0266 8E2F      		mov r24,r30
 642 0268 90E0      		ldi r25,lo8(0)
 643 026a FC01      		movw r30,r24
 644 026c 3197      		sbiw r30,1
 645 026e E531      		cpi r30,21
 646 0270 F105      		cpc r31,__zero_reg__
 647 0272 00F0      		brlo .+2
 648 0274 00C0      		rjmp .L55
 649 0276 E050      		subi r30,lo8(-(gs(.L77)))
 650 0278 F040      		sbci r31,hi8(-(gs(.L77)))
 651 027a EE0F      		lsl r30
 652 027c FF1F      		rol r31
 653 027e 0590      		lpm __tmp_reg__,Z+
 654 0280 F491      		lpm r31,Z
 655 0282 E02D      		mov r30,__tmp_reg__
 656 0284 0994      		ijmp
 657               		.data
 658               		.section .progmem.gcc_sw_table, "a", @progbits
 659               		.p2align 1
 660               	.L77:
 661               		.data
 662               		.section .progmem.gcc_sw_table, "a", @progbits
 663               		.p2align 1
 664 0000 0000      		.word gs(.L56)
 665 0002 0000      		.word gs(.L57)
 666 0004 0000      		.word gs(.L58)
 667 0006 0000      		.word gs(.L59)
 668 0008 0000      		.word gs(.L60)
 669 000a 0000      		.word gs(.L61)
 670 000c 0000      		.word gs(.L62)
 671 000e 0000      		.word gs(.L63)
 672 0010 0000      		.word gs(.L64)
 673 0012 0000      		.word gs(.L65)
 674 0014 0000      		.word gs(.L66)
 675 0016 0000      		.word gs(.L67)
 676 0018 0000      		.word gs(.L68)
 677 001a 0000      		.word gs(.L69)
 678 001c 0000      		.word gs(.L70)
 679 001e 0000      		.word gs(.L71)
 680 0020 0000      		.word gs(.L72)
 681 0022 0000      		.word gs(.L73)
 682 0024 0000      		.word gs(.L74)
 683 0026 0000      		.word gs(.L75)
 684 0028 0000      		.word gs(.L76)
 685               		.text
 686               	.L72:
 688               	.LM60:
 689 0286 80E0      		ldi r24,lo8(__c.2063)
 690 0288 90E0      		ldi r25,hi8(__c.2063)
 691 028a 00C0      		rjmp .L87
 692               	.L56:
 694               	.LM61:
 695 028c 80E0      		ldi r24,lo8(__c.2067)
 696 028e 90E0      		ldi r25,hi8(__c.2067)
 697 0290 00C0      		rjmp .L87
 698               	.L73:
 700               	.LM62:
 701 0292 80E0      		ldi r24,lo8(__c.2070)
 702 0294 90E0      		ldi r25,hi8(__c.2070)
 703 0296 00C0      		rjmp .L87
 704               	.L57:
 706               	.LM63:
 707 0298 80E0      		ldi r24,lo8(__c.2073)
 708 029a 90E0      		ldi r25,hi8(__c.2073)
 709 029c 00C0      		rjmp .L87
 710               	.L58:
 712               	.LM64:
 713 029e 80E0      		ldi r24,lo8(__c.2076)
 714 02a0 90E0      		ldi r25,hi8(__c.2076)
 715 02a2 00C0      		rjmp .L87
 716               	.L59:
 718               	.LM65:
 719 02a4 80E0      		ldi r24,lo8(__c.2079)
 720 02a6 90E0      		ldi r25,hi8(__c.2079)
 721 02a8 00C0      		rjmp .L87
 722               	.L60:
 724               	.LM66:
 725 02aa 80E0      		ldi r24,lo8(__c.2082)
 726 02ac 90E0      		ldi r25,hi8(__c.2082)
 727 02ae 00C0      		rjmp .L87
 728               	.L61:
 730               	.LM67:
 731 02b0 80E0      		ldi r24,lo8(__c.2085)
 732 02b2 90E0      		ldi r25,hi8(__c.2085)
 733 02b4 00C0      		rjmp .L87
 734               	.L63:
 736               	.LM68:
 737 02b6 80E0      		ldi r24,lo8(__c.2088)
 738 02b8 90E0      		ldi r25,hi8(__c.2088)
 739 02ba 00C0      		rjmp .L87
 740               	.L62:
 742               	.LM69:
 743 02bc 80E0      		ldi r24,lo8(__c.2091)
 744 02be 90E0      		ldi r25,hi8(__c.2091)
 745 02c0 00C0      		rjmp .L87
 746               	.L64:
 748               	.LM70:
 749 02c2 80E0      		ldi r24,lo8(__c.2094)
 750 02c4 90E0      		ldi r25,hi8(__c.2094)
 751 02c6 00C0      		rjmp .L87
 752               	.L65:
 754               	.LM71:
 755 02c8 80E0      		ldi r24,lo8(__c.2097)
 756 02ca 90E0      		ldi r25,hi8(__c.2097)
 757 02cc 00C0      		rjmp .L87
 758               	.L66:
 760               	.LM72:
 761 02ce 80E0      		ldi r24,lo8(__c.2100)
 762 02d0 90E0      		ldi r25,hi8(__c.2100)
 763 02d2 00C0      		rjmp .L87
 764               	.L76:
 766               	.LM73:
 767 02d4 80E0      		ldi r24,lo8(__c.2103)
 768 02d6 90E0      		ldi r25,hi8(__c.2103)
 769 02d8 00C0      		rjmp .L87
 770               	.L71:
 772               	.LM74:
 773 02da 80E0      		ldi r24,lo8(__c.2106)
 774 02dc 90E0      		ldi r25,hi8(__c.2106)
 775 02de 00C0      		rjmp .L87
 776               	.L67:
 778               	.LM75:
 779 02e0 80E0      		ldi r24,lo8(__c.2109)
 780 02e2 90E0      		ldi r25,hi8(__c.2109)
 781 02e4 00C0      		rjmp .L87
 782               	.L68:
 784               	.LM76:
 785 02e6 80E0      		ldi r24,lo8(__c.2112)
 786 02e8 90E0      		ldi r25,hi8(__c.2112)
 787 02ea 00C0      		rjmp .L87
 788               	.L69:
 790               	.LM77:
 791 02ec 80E0      		ldi r24,lo8(__c.2115)
 792 02ee 90E0      		ldi r25,hi8(__c.2115)
 793 02f0 00C0      		rjmp .L87
 794               	.L70:
 796               	.LM78:
 797 02f2 80E0      		ldi r24,lo8(__c.2118)
 798 02f4 90E0      		ldi r25,hi8(__c.2118)
 799 02f6 00C0      		rjmp .L87
 800               	.L74:
 802               	.LM79:
 803 02f8 80E0      		ldi r24,lo8(__c.2121)
 804 02fa 90E0      		ldi r25,hi8(__c.2121)
 805 02fc 00C0      		rjmp .L87
 806               	.L75:
 808               	.LM80:
 809 02fe 80E0      		ldi r24,lo8(__c.2124)
 810 0300 90E0      		ldi r25,hi8(__c.2124)
 811 0302 00C0      		rjmp .L87
 812               	.L55:
 814               	.LM81:
 815 0304 80E0      		ldi r24,lo8(__c.2127)
 816 0306 90E0      		ldi r25,hi8(__c.2127)
 817               	.L87:
 818 0308 0E94 0000 		call nrk_kprintf
 820               	.LM82:
 821 030c 6091 0000 		lds r22,__iob+2
 822 0310 7091 0000 		lds r23,(__iob+2)+1
 823 0314 8DE0      		ldi r24,lo8(13)
 824 0316 90E0      		ldi r25,hi8(13)
 825 0318 0E94 0000 		call fputc
 827               	.LM83:
 828 031c 6091 0000 		lds r22,__iob+2
 829 0320 7091 0000 		lds r23,(__iob+2)+1
 830 0324 8AE0      		ldi r24,lo8(10)
 831 0326 90E0      		ldi r25,hi8(10)
 832 0328 0E94 0000 		call fputc
 833 032c 10E0      		ldi r17,lo8(0)
 834 032e 00C0      		rjmp .L86
 835               	.L82:
 837               	.LM84:
 838 0330 82E0      		ldi r24,lo8(2)
 839 0332 90E0      		ldi r25,hi8(2)
 840 0334 0E94 0000 		call nrk_led_set
 842               	.LM85:
 843 0338 83E0      		ldi r24,lo8(3)
 844 033a 90E0      		ldi r25,hi8(3)
 845 033c 0E94 0000 		call nrk_led_clr
 846 0340 00E0      		ldi r16,lo8(0)
 847               	.L80:
 849               	.LM86:
 850 0342 88EE      		ldi r24,lo8(1000)
 851 0344 93E0      		ldi r25,hi8(1000)
 852 0346 0E94 0000 		call nrk_spin_wait_us
 854               	.LM87:
 855 034a 0F5F      		subi r16,lo8(-(1))
 856 034c 0436      		cpi r16,lo8(100)
 857 034e 01F4      		brne .L80
 859               	.LM88:
 860 0350 83E0      		ldi r24,lo8(3)
 861 0352 90E0      		ldi r25,hi8(3)
 862 0354 0E94 0000 		call nrk_led_set
 864               	.LM89:
 865 0358 82E0      		ldi r24,lo8(2)
 866 035a 90E0      		ldi r25,hi8(2)
 867 035c 0E94 0000 		call nrk_led_clr
 868 0360 00E0      		ldi r16,lo8(0)
 869               	.L81:
 871               	.LM90:
 872 0362 88EE      		ldi r24,lo8(1000)
 873 0364 93E0      		ldi r25,hi8(1000)
 874 0366 0E94 0000 		call nrk_spin_wait_us
 876               	.LM91:
 877 036a 0F5F      		subi r16,lo8(-(1))
 878 036c 0436      		cpi r16,lo8(100)
 879 036e 01F4      		brne .L81
 881               	.LM92:
 882 0370 1F5F      		subi r17,lo8(-(1))
 883               	.L86:
 884 0372 1431      		cpi r17,lo8(20)
 885 0374 04F0      		brlt .L82
 887               	.LM93:
 888 0376 83E0      		ldi r24,lo8(3)
 889 0378 90E0      		ldi r25,hi8(3)
 890 037a 0E94 0000 		call nrk_led_clr
 892               	.LM94:
 893 037e 82E0      		ldi r24,lo8(2)
 894 0380 90E0      		ldi r25,hi8(2)
 895 0382 0E94 0000 		call nrk_led_clr
 897               	.LM95:
 898 0386 8091 0000 		lds r24,error_task
 899 038a 0E94 0000 		call blink_morse_code_error
 901               	.LM96:
 902 038e 8091 0000 		lds r24,error_num
 903 0392 0E94 0000 		call blink_morse_code_error
 904 0396 10E0      		ldi r17,lo8(0)
 905 0398 00C0      		rjmp .L82
 911               	.Lscope8:
 913               		.stabd	78,0,0
 917               	.global	nrk_kernel_error_add
 919               	nrk_kernel_error_add:
 920               		.stabd	46,0,0
 922               	.LM97:
 923               	.LFBB9:
 924 039a FF92      		push r15
 925 039c 0F93      		push r16
 926 039e 1F93      		push r17
 927 03a0 DF93      		push r29
 928 03a2 CF93      		push r28
 929 03a4 0F92      		push __tmp_reg__
 930 03a6 CDB7      		in r28,__SP_L__
 931 03a8 DEB7      		in r29,__SP_H__
 932               	/* prologue: function */
 933               	/* frame size = 1 */
 934 03aa 182F      		mov r17,r24
 935 03ac F62E      		mov r15,r22
 937               	.LM98:
 938 03ae 8093 0000 		sts error_num,r24
 940               	.LM99:
 941 03b2 6093 0000 		sts error_task,r22
 943               	.LM100:
 944 03b6 0E94 0000 		call nrk_error_print
 945 03ba 00E0      		ldi r16,lo8(0)
 946 03bc 00C0      		rjmp .L96
 947               	.L92:
 949               	.LM101:
 950 03be 82E0      		ldi r24,lo8(2)
 951 03c0 90E0      		ldi r25,hi8(2)
 952 03c2 0E94 0000 		call nrk_led_set
 954               	.LM102:
 955 03c6 83E0      		ldi r24,lo8(3)
 956 03c8 90E0      		ldi r25,hi8(3)
 957 03ca 0E94 0000 		call nrk_led_clr
 958 03ce 20E0      		ldi r18,lo8(0)
 959               	.L90:
 961               	.LM103:
 962 03d0 88EE      		ldi r24,lo8(1000)
 963 03d2 93E0      		ldi r25,hi8(1000)
 964 03d4 2983      		std Y+1,r18
 965 03d6 0E94 0000 		call nrk_spin_wait_us
 967               	.LM104:
 968 03da 2981      		ldd r18,Y+1
 969 03dc 2F5F      		subi r18,lo8(-(1))
 970 03de 2436      		cpi r18,lo8(100)
 971 03e0 01F4      		brne .L90
 973               	.LM105:
 974 03e2 83E0      		ldi r24,lo8(3)
 975 03e4 90E0      		ldi r25,hi8(3)
 976 03e6 0E94 0000 		call nrk_led_set
 978               	.LM106:
 979 03ea 82E0      		ldi r24,lo8(2)
 980 03ec 90E0      		ldi r25,hi8(2)
 981 03ee 0E94 0000 		call nrk_led_clr
 982 03f2 20E0      		ldi r18,lo8(0)
 983               	.L91:
 985               	.LM107:
 986 03f4 88EE      		ldi r24,lo8(1000)
 987 03f6 93E0      		ldi r25,hi8(1000)
 988 03f8 2983      		std Y+1,r18
 989 03fa 0E94 0000 		call nrk_spin_wait_us
 991               	.LM108:
 992 03fe 2981      		ldd r18,Y+1
 993 0400 2F5F      		subi r18,lo8(-(1))
 994 0402 2436      		cpi r18,lo8(100)
 995 0404 01F4      		brne .L91
 997               	.LM109:
 998 0406 0F5F      		subi r16,lo8(-(1))
 999               	.L96:
 1000 0408 0431      		cpi r16,lo8(20)
 1001 040a 00F0      		brlo .L92
 1003               	.LM110:
 1004 040c 83E0      		ldi r24,lo8(3)
 1005 040e 90E0      		ldi r25,hi8(3)
 1006 0410 0E94 0000 		call nrk_led_clr
 1008               	.LM111:
 1009 0414 82E0      		ldi r24,lo8(2)
 1010 0416 90E0      		ldi r25,hi8(2)
 1011 0418 0E94 0000 		call nrk_led_clr
 1013               	.LM112:
 1014 041c 8F2D      		mov r24,r15
 1015 041e 0E94 0000 		call blink_morse_code_error
 1017               	.LM113:
 1018 0422 812F      		mov r24,r17
 1019 0424 0E94 0000 		call blink_morse_code_error
 1020 0428 00E0      		ldi r16,lo8(0)
 1021 042a 00C0      		rjmp .L92
 1027               	.Lscope9:
 1029               		.stabd	78,0,0
 1032               	.global	nrk_error_add
 1034               	nrk_error_add:
 1035               		.stabd	46,0,0
 1037               	.LM114:
 1038               	.LFBB10:
 1039               	/* prologue: function */
 1040               	/* frame size = 0 */
 1042               	.LM115:
 1043 042c 8093 0000 		sts error_num,r24
 1045               	.LM116:
 1046 0430 E091 0000 		lds r30,nrk_cur_task_TCB
 1047 0434 F091 0000 		lds r31,(nrk_cur_task_TCB)+1
 1048 0438 8085      		ldd r24,Z+8
 1049 043a 8093 0000 		sts error_task,r24
 1051               	.LM117:
 1052 043e 0E94 0000 		call nrk_error_print
 1053               	/* epilogue start */
 1055               	.LM118:
 1056 0442 0895      		ret
 1058               	.Lscope10:
 1060               		.stabd	78,0,0
 1061               		.section	.progmem.data,"a",@progbits
 1064               	__c.2127:
 1065 0000 554E 4B4F 		.string	"UNKOWN"
 1065      574E 00
 1068               	__c.2124:
 1069 0007 4578 7465 		.string	"External Reset"
 1069      726E 616C 
 1069      2052 6573 
 1069      6574 00
 1072               	__c.2121:
 1073 0016 4272 6F77 		.string	"Brown Out Detect"
 1073      6E20 4F75 
 1073      7420 4465 
 1073      7465 6374 
 1073      00
 1076               	__c.2118:
 1077 0027 4661 696C 		.string	"Failed to create Semaphore"
 1077      6564 2074 
 1077      6F20 6372 
 1077      6561 7465 
 1077      2053 656D 
 1080               	__c.2115:
 1081 0042 4661 696C 		.string	"Failed to create Signal"
 1081      6564 2074 
 1081      6F20 6372 
 1081      6561 7465 
 1081      2053 6967 
 1084               	__c.2112:
 1085 005a 4B65 726E 		.string	"Kernel function not implemented"
 1085      656C 2066 
 1085      756E 6374 
 1085      696F 6E20 
 1085      6E6F 7420 
 1088               	__c.2109:
 1089 007a 4465 7669 		.string	"Device Driver Error"
 1089      6365 2044 
 1089      7269 7665 
 1089      7220 4572 
 1089      726F 7200 
 1092               	__c.2106:
 1093 008e 5761 7463 		.string	"Watchdog Restart"
 1093      6864 6F67 
 1093      2052 6573 
 1093      7461 7274 
 1093      00
 1096               	__c.2103:
 1097 009f 5357 2057 		.string	"SW Watchdog Restart"
 1097      6174 6368 
 1097      646F 6720 
 1097      5265 7374 
 1097      6172 7400 
 1100               	__c.2100:
 1101 00b3 5469 6D65 		.string	"Timer Overflow"
 1101      7220 4F76 
 1101      6572 666C 
 1101      6F77 00
 1104               	__c.2097:
 1105 00c2 556E 6861 		.string	"Unhandled Interrupt Vector"
 1105      6E64 6C65 
 1105      6420 496E 
 1105      7465 7272 
 1105      7570 7420 
 1108               	__c.2094:
 1109 00dd 4C6F 7720 		.string	"Low Voltage"
 1109      566F 6C74 
 1109      6167 6500 
 1112               	__c.2091:
 1113 00e9 4578 7472 		.string	"Extra Task started, is nrk_cfg.h ok?"
 1113      6120 5461 
 1113      736B 2073 
 1113      7461 7274 
 1113      6564 2C20 
 1116               	__c.2088:
 1117 010e 4964 6C65 		.string	"Idle or Kernel Stack Overflow"
 1117      206F 7220 
 1117      4B65 726E 
 1117      656C 2053 
 1117      7461 636B 
 1120               	__c.2085:
 1121 012c 556E 6578 		.string	"Unexpected Restart"
 1121      7065 6374 
 1121      6564 2052 
 1121      6573 7461 
 1121      7274 00
 1124               	__c.2082:
 1125 013f 4475 706C 		.string	"Duplicated Task ID"
 1125      6963 6174 
 1125      6564 2054 
 1125      6173 6B20 
 1125      4944 00
 1128               	__c.2079:
 1129 0152 5363 6865 		.string	"Scheduler Missed Wakeup"
 1129      6475 6C65 
 1129      7220 4D69 
 1129      7373 6564 
 1129      2057 616B 
 1132               	__c.2076:
 1133 016a 5461 736B 		.string	"Task Reserve Violated"
 1133      2052 6573 
 1133      6572 7665 
 1133      2056 696F 
 1133      6C61 7465 
 1136               	__c.2073:
 1137 0180 5265 7365 		.string	"Reserve Error in Scheduler"
 1137      7276 6520 
 1137      4572 726F 
 1137      7220 696E 
 1137      2053 6368 
 1140               	__c.2070:
 1141 019b 496E 7661 		.string	"Invalid Stack Pointer"
 1141      6C69 6420 
 1141      5374 6163 
 1141      6B20 506F 
 1141      696E 7465 
 1144               	__c.2067:
 1145 01b1 5461 736B 		.string	"Task Stack Overflow"
 1145      2053 7461 
 1145      636B 204F 
 1145      7665 7266 
 1145      6C6F 7700 
 1148               	__c.2063:
 1149 01c5 5374 6163 		.string	"Stack was not defined as large enough!"
 1149      6B20 7761 
 1149      7320 6E6F 
 1149      7420 6465 
 1149      6669 6E65 
 1152               	__c.2060:
 1153 01ec 293A 2000 		.string	"): "
 1156               	__c.2058:
 1157 01f0 2A4E 524B 		.string	"*NRK ERROR("
 1157      2045 5252 
 1157      4F52 2800 
 1158               		.comm _nrk_signal_list,4,1
 1159               		.comm error_task,1,1
 1160               		.comm error_num,1,1
 1161               		.comm nrk_idle_task_stk,128,1
 1162               		.comm nrk_kernel_stk_ptr,2,1
 1163               		.comm _nrk_prev_timer_val,1,1
 1164               		.comm _nrk_time_trigger,1,1
 1165               		.comm app_timer0_callback,2,1
 1166               		.comm app_timer0_prescale,1,1
 1176               		.text
 1178               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 nrk_error.c
     /tmp/ccgzSlP9.s:2      *ABS*:0000003f __SREG__
     /tmp/ccgzSlP9.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccgzSlP9.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccgzSlP9.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccgzSlP9.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccgzSlP9.s:136    .text:00000000 _nrk_errno_set
     /tmp/ccgzSlP9.s:159    .text:0000000c nrk_errno_get
     /tmp/ccgzSlP9.s:184    .text:00000018 nrk_error_get
                            *COM*:00000001 error_num
                            *COM*:00000001 error_task
     /tmp/ccgzSlP9.s:219    .text:00000034 pause
     /tmp/ccgzSlP9.s:267    .text:0000005e blink_dot
     /tmp/ccgzSlP9.s:301    .text:00000078 blink_dash
     /tmp/ccgzSlP9.s:346    .text:0000009a blink_morse_code_error
     /tmp/ccgzSlP9.s:569    .text:000001fe nrk_error_print
     /tmp/ccgzSlP9.s:1156   .progmem.data:000001f0 __c.2058
     /tmp/ccgzSlP9.s:1152   .progmem.data:000001ec __c.2060
     /tmp/ccgzSlP9.s:1148   .progmem.data:000001c5 __c.2063
     /tmp/ccgzSlP9.s:1144   .progmem.data:000001b1 __c.2067
     /tmp/ccgzSlP9.s:1140   .progmem.data:0000019b __c.2070
     /tmp/ccgzSlP9.s:1136   .progmem.data:00000180 __c.2073
     /tmp/ccgzSlP9.s:1132   .progmem.data:0000016a __c.2076
     /tmp/ccgzSlP9.s:1128   .progmem.data:00000152 __c.2079
     /tmp/ccgzSlP9.s:1124   .progmem.data:0000013f __c.2082
     /tmp/ccgzSlP9.s:1120   .progmem.data:0000012c __c.2085
     /tmp/ccgzSlP9.s:1116   .progmem.data:0000010e __c.2088
     /tmp/ccgzSlP9.s:1112   .progmem.data:000000e9 __c.2091
     /tmp/ccgzSlP9.s:1108   .progmem.data:000000dd __c.2094
     /tmp/ccgzSlP9.s:1104   .progmem.data:000000c2 __c.2097
     /tmp/ccgzSlP9.s:1100   .progmem.data:000000b3 __c.2100
     /tmp/ccgzSlP9.s:1096   .progmem.data:0000009f __c.2103
     /tmp/ccgzSlP9.s:1092   .progmem.data:0000008e __c.2106
     /tmp/ccgzSlP9.s:1088   .progmem.data:0000007a __c.2109
     /tmp/ccgzSlP9.s:1084   .progmem.data:0000005a __c.2112
     /tmp/ccgzSlP9.s:1080   .progmem.data:00000042 __c.2115
     /tmp/ccgzSlP9.s:1076   .progmem.data:00000027 __c.2118
     /tmp/ccgzSlP9.s:1072   .progmem.data:00000016 __c.2121
     /tmp/ccgzSlP9.s:1068   .progmem.data:00000007 __c.2124
     /tmp/ccgzSlP9.s:1064   .progmem.data:00000000 __c.2127
     /tmp/ccgzSlP9.s:919    .text:0000039a nrk_kernel_error_add
     /tmp/ccgzSlP9.s:1034   .text:0000042c nrk_error_add
                            *COM*:00000004 _nrk_signal_list
                            *COM*:00000080 nrk_idle_task_stk
                            *COM*:00000002 nrk_kernel_stk_ptr
                            *COM*:00000001 _nrk_prev_timer_val
                            *COM*:00000001 _nrk_time_trigger
                            *COM*:00000002 app_timer0_callback
                            *COM*:00000001 app_timer0_prescale

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
nrk_cur_task_TCB
nrk_spin_wait_us
nrk_led_set
nrk_led_clr
sprintf
nrk_int_disable
nrk_kprintf
printf
__iob
fputc
