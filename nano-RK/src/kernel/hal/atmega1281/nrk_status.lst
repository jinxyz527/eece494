   1               		.file	"nrk_status.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.global __do_copy_data
   8               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
 110               	.global	_nrk_startup_error
 112               	_nrk_startup_error:
 113               		.stabd	46,0,0
   1:../../../src/kernel/hal/atmega1281/nrk_status.c **** /******************************************************************************
   2:../../../src/kernel/hal/atmega1281/nrk_status.c **** *  Nano-RK, a real-time operating system for sensor networks.
   3:../../../src/kernel/hal/atmega1281/nrk_status.c **** *  Copyright (C) 2007, Real-Time and Multimedia Lab, Carnegie Mellon University
   4:../../../src/kernel/hal/atmega1281/nrk_status.c **** *  All rights reserved.
   5:../../../src/kernel/hal/atmega1281/nrk_status.c **** *
   6:../../../src/kernel/hal/atmega1281/nrk_status.c **** *  This is the Open Source Version of Nano-RK included as part of a Dual
   7:../../../src/kernel/hal/atmega1281/nrk_status.c **** *  Licensing Model. If you are unsure which license to use please refer to:
   8:../../../src/kernel/hal/atmega1281/nrk_status.c **** *  http://www.nanork.org/nano-RK/wiki/Licensing
   9:../../../src/kernel/hal/atmega1281/nrk_status.c **** *
  10:../../../src/kernel/hal/atmega1281/nrk_status.c **** *  This program is free software: you can redistribute it and/or modify
  11:../../../src/kernel/hal/atmega1281/nrk_status.c **** *  it under the terms of the GNU General Public License as published by
  12:../../../src/kernel/hal/atmega1281/nrk_status.c **** *  the Free Software Foundation, version 2.0 of the License.
  13:../../../src/kernel/hal/atmega1281/nrk_status.c **** *
  14:../../../src/kernel/hal/atmega1281/nrk_status.c **** *  This program is distributed in the hope that it will be useful,
  15:../../../src/kernel/hal/atmega1281/nrk_status.c **** *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  16:../../../src/kernel/hal/atmega1281/nrk_status.c **** *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  17:../../../src/kernel/hal/atmega1281/nrk_status.c **** *  GNU General Public License for more details.
  18:../../../src/kernel/hal/atmega1281/nrk_status.c **** *
  19:../../../src/kernel/hal/atmega1281/nrk_status.c **** *  You should have received a copy of the GNU General Public License
  20:../../../src/kernel/hal/atmega1281/nrk_status.c **** *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  21:../../../src/kernel/hal/atmega1281/nrk_status.c **** *
  22:../../../src/kernel/hal/atmega1281/nrk_status.c **** *  Contributing Authors (specific to this file):
  23:../../../src/kernel/hal/atmega1281/nrk_status.c **** *  Anthony Rowe
  24:../../../src/kernel/hal/atmega1281/nrk_status.c **** *******************************************************************************/
  25:../../../src/kernel/hal/atmega1281/nrk_status.c **** 
  26:../../../src/kernel/hal/atmega1281/nrk_status.c **** 
  27:../../../src/kernel/hal/atmega1281/nrk_status.c **** #include <include.h>
  28:../../../src/kernel/hal/atmega1281/nrk_status.c **** #include <nrk_status.h>
  29:../../../src/kernel/hal/atmega1281/nrk_status.c **** #include <nrk_error.h>
  30:../../../src/kernel/hal/atmega1281/nrk_status.c **** 
  31:../../../src/kernel/hal/atmega1281/nrk_status.c **** uint8_t _nrk_startup_error()
  32:../../../src/kernel/hal/atmega1281/nrk_status.c **** {
 115               	.LM0:
 116               	.LFBB1:
 117               	/* prologue: function */
 118               	/* frame size = 0 */
  33:../../../src/kernel/hal/atmega1281/nrk_status.c **** uint8_t error;
  34:../../../src/kernel/hal/atmega1281/nrk_status.c **** error=0;
  35:../../../src/kernel/hal/atmega1281/nrk_status.c **** // Use the timer settings that are normally 0 on reset to detect
  36:../../../src/kernel/hal/atmega1281/nrk_status.c **** // if the OS has reboot by accident
  37:../../../src/kernel/hal/atmega1281/nrk_status.c **** 
  38:../../../src/kernel/hal/atmega1281/nrk_status.c **** 
  39:../../../src/kernel/hal/atmega1281/nrk_status.c **** // Check Watchdog timer
  40:../../../src/kernel/hal/atmega1281/nrk_status.c **** if( (MCUSR & (1<<WDRF)) != 0 )
 120               	.LM1:
 121 0000 04B6      		in __tmp_reg__,84-0x20
 122 0002 03FE      		sbrs __tmp_reg__,3
 123 0004 00C0      		rjmp .L2
 124 0006 80E1      		ldi r24,lo8(16)
 125 0008 00C0      		rjmp .L3
 126               	.L2:
 127 000a 80E0      		ldi r24,lo8(0)
 128               	.L3:
  41:../../../src/kernel/hal/atmega1281/nrk_status.c **** 	{
  42:../../../src/kernel/hal/atmega1281/nrk_status.c **** 	// don't clear wdt
  43:../../../src/kernel/hal/atmega1281/nrk_status.c **** 	error|=0x10;
  44:../../../src/kernel/hal/atmega1281/nrk_status.c **** 	}
  45:../../../src/kernel/hal/atmega1281/nrk_status.c **** 
  46:../../../src/kernel/hal/atmega1281/nrk_status.c **** 
  47:../../../src/kernel/hal/atmega1281/nrk_status.c **** // Check Brown Out 
  48:../../../src/kernel/hal/atmega1281/nrk_status.c **** if( (MCUSR & (1<<BORF)) != 0 )
 130               	.LM2:
 131 000c 04B6      		in __tmp_reg__,84-0x20
 132 000e 02FE      		sbrs __tmp_reg__,2
 133 0010 00C0      		rjmp .L4
  49:../../../src/kernel/hal/atmega1281/nrk_status.c **** 	{
  50:../../../src/kernel/hal/atmega1281/nrk_status.c **** 	MCUSR &= ~(1<<BORF);	
 135               	.LM3:
 136 0012 94B7      		in r25,84-0x20
 137 0014 9B7F      		andi r25,lo8(-5)
 138 0016 94BF      		out 84-0x20,r25
  51:../../../src/kernel/hal/atmega1281/nrk_status.c **** 	// Only add brownout if it isn't the first bootup
  52:../../../src/kernel/hal/atmega1281/nrk_status.c **** 	if( (MCUSR & (1<<PORF)) == 0 )
 140               	.LM4:
 141 0018 04B6      		in __tmp_reg__,84-0x20
 142 001a 00FE      		sbrs __tmp_reg__,0
  53:../../../src/kernel/hal/atmega1281/nrk_status.c **** 		error|=0x04;
 144               	.LM5:
 145 001c 8460      		ori r24,lo8(4)
 146               	.L4:
  54:../../../src/kernel/hal/atmega1281/nrk_status.c **** 	}
  55:../../../src/kernel/hal/atmega1281/nrk_status.c **** 
  56:../../../src/kernel/hal/atmega1281/nrk_status.c **** // Check External Reset 
  57:../../../src/kernel/hal/atmega1281/nrk_status.c **** if( (MCUSR & (1<<EXTRF)) != 0 )
 148               	.LM6:
 149 001e 04B6      		in __tmp_reg__,84-0x20
 150 0020 01FE      		sbrs __tmp_reg__,1
 151 0022 00C0      		rjmp .L5
  58:../../../src/kernel/hal/atmega1281/nrk_status.c **** 	{
  59:../../../src/kernel/hal/atmega1281/nrk_status.c **** 	MCUSR &= ~(1<<EXTRF);	
 153               	.LM7:
 154 0024 94B7      		in r25,84-0x20
 155 0026 9D7F      		andi r25,lo8(-3)
 156 0028 94BF      		out 84-0x20,r25
  60:../../../src/kernel/hal/atmega1281/nrk_status.c **** 	error|=0x02;
 158               	.LM8:
 159 002a 8260      		ori r24,lo8(2)
 160 002c 0895      		ret
 161               	.L5:
  61:../../../src/kernel/hal/atmega1281/nrk_status.c **** 	}
  62:../../../src/kernel/hal/atmega1281/nrk_status.c **** 
  63:../../../src/kernel/hal/atmega1281/nrk_status.c **** // If any of the above errors went off, then the next errors will
  64:../../../src/kernel/hal/atmega1281/nrk_status.c **** // incorrectly be set!  So make sure to bail early!
  65:../../../src/kernel/hal/atmega1281/nrk_status.c **** if(error!=0) return error;
 163               	.LM9:
 164 002e 8823      		tst r24
 165 0030 01F4      		brne .L6
  66:../../../src/kernel/hal/atmega1281/nrk_status.c **** 
  67:../../../src/kernel/hal/atmega1281/nrk_status.c **** // Check if normal power up state is set and then clear it
  68:../../../src/kernel/hal/atmega1281/nrk_status.c **** if( (MCUSR & (1<<PORF)) != 0 )
 167               	.LM10:
 168 0032 04B6      		in __tmp_reg__,84-0x20
 169 0034 00FC      		sbrc __tmp_reg__,0
 170 0036 00C0      		rjmp .L7
 171 0038 81E0      		ldi r24,lo8(1)
 172 003a 00C0      		rjmp .L8
 173               	.L7:
  69:../../../src/kernel/hal/atmega1281/nrk_status.c **** 	{
  70:../../../src/kernel/hal/atmega1281/nrk_status.c **** 	MCUSR &= ~(1<<PORF);
 175               	.LM11:
 176 003c 94B7      		in r25,84-0x20
 177 003e 9E7F      		andi r25,lo8(-2)
 178 0040 94BF      		out 84-0x20,r25
 179               	.L8:
  71:../../../src/kernel/hal/atmega1281/nrk_status.c **** 	}
  72:../../../src/kernel/hal/atmega1281/nrk_status.c **** 	else {
  73:../../../src/kernel/hal/atmega1281/nrk_status.c **** 	error|=0x01;
  74:../../../src/kernel/hal/atmega1281/nrk_status.c **** 	}
  75:../../../src/kernel/hal/atmega1281/nrk_status.c **** 
  76:../../../src/kernel/hal/atmega1281/nrk_status.c **** // check uart state 
  77:../../../src/kernel/hal/atmega1281/nrk_status.c **** if((volatile uint8_t)TCCR2A!=0) error|=0x01;
 181               	.LM12:
 182 0042 9091 B000 		lds r25,176
 183 0046 9111      		cpse r25,__zero_reg__
 184 0048 8160      		ori r24,lo8(1)
 185               	.L6:
  78:../../../src/kernel/hal/atmega1281/nrk_status.c **** 
  79:../../../src/kernel/hal/atmega1281/nrk_status.c **** return error;
  80:../../../src/kernel/hal/atmega1281/nrk_status.c **** }
 187               	.LM13:
 188 004a 0895      		ret
 193               	.Lscope1:
 195               		.stabd	78,0,0
 196               		.comm _nrk_signal_list,4,1
 197               		.comm error_task,1,1
 198               		.comm error_num,1,1
 203               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 nrk_status.c
     /tmp/ccRkzMKG.s:2      *ABS*:0000003f __SREG__
     /tmp/ccRkzMKG.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccRkzMKG.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccRkzMKG.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccRkzMKG.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccRkzMKG.s:112    .text:00000000 _nrk_startup_error
                            *COM*:00000004 _nrk_signal_list
                            *COM*:00000001 error_task
                            *COM*:00000001 error_num

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
