   1               		.file	"nrk_watchdog.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.global __do_copy_data
   8               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
 110               	.global	nrk_watchdog_check
 112               	nrk_watchdog_check:
 113               		.stabd	46,0,0
   1:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** /******************************************************************************
   2:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** *  Nano-RK, a real-time operating system for sensor networks.
   3:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** *  Copyright (C) 2007, Real-Time and Multimedia Lab, Carnegie Mellon University
   4:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** *  All rights reserved.
   5:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** *
   6:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** *  This is the Open Source Version of Nano-RK included as part of a Dual
   7:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** *  Licensing Model. If you are unsure which license to use please refer to:
   8:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** *  http://www.nanork.org/nano-RK/wiki/Licensing
   9:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** *
  10:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** *  This program is free software: you can redistribute it and/or modify
  11:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** *  it under the terms of the GNU General Public License as published by
  12:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** *  the Free Software Foundation, version 2.0 of the License.
  13:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** *
  14:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** *  This program is distributed in the hope that it will be useful,
  15:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  16:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  17:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** *  GNU General Public License for more details.
  18:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** *
  19:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** *  You should have received a copy of the GNU General Public License
  20:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  21:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** *
  22:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** *  Contributing Authors (specific to this file):
  23:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** *  Anthony Rowe
  24:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** *******************************************************************************/
  25:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** 
  26:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** #include <include.h>
  27:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** #include <nrk_watchdog.h>
  28:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** #include <nrk_error.h>
  29:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** #include <avr/wdt.h>
  30:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** 
  31:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** void nrk_watchdog_disable()
  32:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** {
  33:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** nrk_int_disable();
  34:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** nrk_watchdog_reset();
  35:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** MCUSR &= ~(1<<WDRF);
  36:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** WDTCR |= (1<<WDCE) | (1<<WDE);
  37:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** WDTCR = 0;
  38:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** nrk_int_enable();
  39:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** }
  40:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** 
  41:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** void nrk_watchdog_enable()
  42:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** {
  43:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** // Enable watchdog with 1024K cycle timeout
  44:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** // No Interrupt Trigger
  45:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** nrk_int_disable();
  46:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** MCUSR &= ~(1<<WDRF);
  47:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** nrk_watchdog_reset();
  48:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** WDTCR |= (1<<WDCE) | (1<<WDE);
  49:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** WDTCR = (1<<WDE) | (1<<WDP2) | (1<<WDP1) | (1<<WDP0);
  50:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** nrk_int_enable();
  51:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** 
  52:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** }
  53:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** 
  54:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** int8_t nrk_watchdog_check()
  55:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** {
 115               	.LM0:
 116               	.LFBB1:
 117               	/* prologue: function */
 118               	/* frame size = 0 */
  56:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** 
  57:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** if((MCUSR & (1<<WDRF))==0) return NRK_OK;
 120               	.LM1:
 121 0000 04B6      		in __tmp_reg__,84-0x20
 122 0002 03FE      		sbrs __tmp_reg__,3
 123 0004 00C0      		rjmp .L2
 124 0006 8FEF      		ldi r24,lo8(-1)
 125 0008 0895      		ret
 126               	.L2:
 127 000a 81E0      		ldi r24,lo8(1)
  58:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** return NRK_ERROR;
  59:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** }
 129               	.LM2:
 130 000c 0895      		ret
 132               	.Lscope1:
 134               		.stabd	78,0,0
 136               	.global	nrk_watchdog_reset
 138               	nrk_watchdog_reset:
 139               		.stabd	46,0,0
  60:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** 
  61:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** inline void nrk_watchdog_reset()
  62:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** {
 141               	.LM3:
 142               	.LFBB2:
 143               	/* prologue: function */
 144               	/* frame size = 0 */
  63:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** wdt_reset();
 146               	.LM4:
 147               	/* #APP */
 148               	 ;  63 "../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c" 1
 149 000e A895      		wdr
 150               	 ;  0 "" 2
 151               	/* epilogue start */
  64:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** 
  65:../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c **** }
 153               	.LM5:
 154               	/* #NOAPP */
 155 0010 0895      		ret
 157               	.Lscope2:
 159               		.stabd	78,0,0
 161               	.global	nrk_watchdog_enable
 163               	nrk_watchdog_enable:
 164               		.stabd	46,0,0
 166               	.LM6:
 167               	.LFBB3:
 168               	/* prologue: function */
 169               	/* frame size = 0 */
 171               	.LM7:
 172 0012 0E94 0000 		call nrk_int_disable
 174               	.LM8:
 175 0016 84B7      		in r24,84-0x20
 176 0018 877F      		andi r24,lo8(-9)
 177 001a 84BF      		out 84-0x20,r24
 178               	.LBB6:
 179               	.LBB7:
 181               	.LM9:
 182               	/* #APP */
 183               	 ;  63 "../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c" 1
 184 001c A895      		wdr
 185               	 ;  0 "" 2
 186               	/* #NOAPP */
 187               	.LBE7:
 188               	.LBE6:
 190               	.LM10:
 191 001e 81B5      		in r24,65-0x20
 192 0020 8861      		ori r24,lo8(24)
 193 0022 81BD      		out 65-0x20,r24
 195               	.LM11:
 196 0024 8FE0      		ldi r24,lo8(15)
 197 0026 81BD      		out 65-0x20,r24
 199               	.LM12:
 200 0028 0E94 0000 		call nrk_int_enable
 201               	/* epilogue start */
 203               	.LM13:
 204 002c 0895      		ret
 206               	.Lscope3:
 208               		.stabd	78,0,0
 210               	.global	nrk_watchdog_disable
 212               	nrk_watchdog_disable:
 213               		.stabd	46,0,0
 215               	.LM14:
 216               	.LFBB4:
 217               	/* prologue: function */
 218               	/* frame size = 0 */
 220               	.LM15:
 221 002e 0E94 0000 		call nrk_int_disable
 222               	.LBB8:
 223               	.LBB9:
 225               	.LM16:
 226               	/* #APP */
 227               	 ;  63 "../../../nano-RK/src/kernel/hal/atmega128/nrk_watchdog.c" 1
 228 0032 A895      		wdr
 229               	 ;  0 "" 2
 230               	/* #NOAPP */
 231               	.LBE9:
 232               	.LBE8:
 234               	.LM17:
 235 0034 84B7      		in r24,84-0x20
 236 0036 877F      		andi r24,lo8(-9)
 237 0038 84BF      		out 84-0x20,r24
 239               	.LM18:
 240 003a 81B5      		in r24,65-0x20
 241 003c 8861      		ori r24,lo8(24)
 242 003e 81BD      		out 65-0x20,r24
 244               	.LM19:
 245 0040 11BC      		out 65-0x20,__zero_reg__
 247               	.LM20:
 248 0042 0E94 0000 		call nrk_int_enable
 249               	/* epilogue start */
 251               	.LM21:
 252 0046 0895      		ret
 254               	.Lscope4:
 256               		.stabd	78,0,0
 257               		.comm _nrk_signal_list,4,1
 258               		.comm error_task,1,1
 259               		.comm error_num,1,1
 264               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 nrk_watchdog.c
     /tmp/ccmYLkpM.s:2      *ABS*:0000003f __SREG__
     /tmp/ccmYLkpM.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccmYLkpM.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccmYLkpM.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccmYLkpM.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccmYLkpM.s:112    .text:00000000 nrk_watchdog_check
     /tmp/ccmYLkpM.s:138    .text:0000000e nrk_watchdog_reset
     /tmp/ccmYLkpM.s:163    .text:00000012 nrk_watchdog_enable
     /tmp/ccmYLkpM.s:212    .text:0000002e nrk_watchdog_disable
                            *COM*:00000004 _nrk_signal_list
                            *COM*:00000001 error_task
                            *COM*:00000001 error_num

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
nrk_int_disable
nrk_int_enable
