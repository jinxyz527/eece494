   1               		.file	"hal_rf_wait_for_crystal_oscillator.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.global __do_copy_data
   8               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
 107               	.global	halRfWaitForCrystalOscillator
 109               	halRfWaitForCrystalOscillator:
 110               		.stabd	46,0,0
   1:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** /******************************************************************************
   2:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  Nano-RK, a real-time operating system for sensor networks.
   3:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  Copyright (C) 2007, Real-Time and Multimedia Lab, Carnegie Mellon University
   4:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  All rights reserved.
   5:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *
   6:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  This is the Open Source Version of Nano-RK included as part of a Dual
   7:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  Licensing Model. If you are unsure which license to use please refer to:
   8:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  http://www.nanork.org/nano-RK/wiki/Licensing
   9:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *
  10:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  This program is free software: you can redistribute it and/or modify
  11:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  it under the terms of the GNU General Public License as published by
  12:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  the Free Software Foundation, version 2.0 of the License.
  13:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *
  14:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  This program is distributed in the hope that it will be useful,
  15:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  16:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  17:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  GNU General Public License for more details.
  18:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *
  19:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  You should have received a copy of the GNU General Public License
  20:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  21:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *
  22:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  Contributing Authors (specific to this file):
  23:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  Chipcon Development Team 
  24:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *******************************************************************************/
  25:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** 
  26:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** #include <include.h>
  27:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** #include <ulib.h>
  28:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** 
  29:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** //-------------------------------------------------------------------------------------------------
  30:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** //	void rfWaitForCrystalOscillator(void)
  31:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** //
  32:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** //	DESCRIPTION:
  33:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** //		Waits for the crystal oscillator to become stable. The flag is polled via the SPI status byte.
  34:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** //      
  35:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** //      Note that this function will lock up if the SXOSCON command strobe has not been given befor
  36:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** //      function call. Also note that global interrupts will always be enabled when this function 
  37:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** //      returns.
  38:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** //-------------------------------------------------------------------------------------------------
  39:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** void halRfWaitForCrystalOscillator(void) {
 112               	.LM0:
 113               	.LFBB1:
 114               	/* prologue: function */
 115               	/* frame size = 0 */
 116               	.L3:
  40:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c ****     uint8_t spiStatusByte;
  41:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** 
  42:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c ****     // Poll the SPI status byte until the crystal oscillator is stable
  43:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c ****     do {
  44:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** 	    DISABLE_GLOBAL_INT();
 118               	.LM1:
 119               	/* #APP */
 120               	 ;  44 "../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c" 1
 121 0000 F894      		cli
 122               		
 123               	 ;  0 "" 2
  45:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** 	    FASTSPI_UPD_STATUS(spiStatusByte);
 125               	.LM2:
 126               	/* #NOAPP */
 127 0002 C098      		cbi 56-0x20,0
 128 0004 1FB8      		out 47-0x20,__zero_reg__
 129               	.L2:
 130 0006 779B      		sbis 46-0x20,7
 131 0008 00C0      		rjmp .L2
 132 000a 8FB1      		in r24,47-0x20
 133 000c C09A      		sbi 56-0x20,0
  46:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** 	    ENABLE_GLOBAL_INT();
 135               	.LM3:
 136               	/* #APP */
 137               	 ;  46 "../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c" 1
 138 000e 7894      		sei
 139               		
 140               	 ;  0 "" 2
  47:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c ****     } while (!(spiStatusByte & (BM(CC2420_XOSC16M_STABLE))));
 142               	.LM4:
 143               	/* #NOAPP */
 144 0010 86FF      		sbrs r24,6
 145 0012 00C0      		rjmp .L3
 146               	/* epilogue start */
  48:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** 
  49:../../../nano-RK/src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** } // halRfWaitForCrystalOscillator
 148               	.LM5:
 149 0014 0895      		ret
 154               	.Lscope1:
 156               		.stabd	78,0,0
 157               		.comm _nrk_signal_list,4,1
 160               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 hal_rf_wait_for_crystal_oscillator.c
     /tmp/cc3PPksr.s:2      *ABS*:0000003f __SREG__
     /tmp/cc3PPksr.s:3      *ABS*:0000003e __SP_H__
     /tmp/cc3PPksr.s:4      *ABS*:0000003d __SP_L__
     /tmp/cc3PPksr.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/cc3PPksr.s:6      *ABS*:00000001 __zero_reg__
     /tmp/cc3PPksr.s:109    .text:00000000 halRfWaitForCrystalOscillator
                            *COM*:00000004 _nrk_signal_list

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
